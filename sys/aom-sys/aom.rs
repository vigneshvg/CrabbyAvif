/* automatically generated by rust-bindgen 0.69.4 */

pub const _STDINT_H: u32 = 1;
pub const _FEATURES_H: u32 = 1;
pub const _DEFAULT_SOURCE: u32 = 1;
pub const __GLIBC_USE_ISOC2X: u32 = 0;
pub const __USE_ISOC11: u32 = 1;
pub const __USE_ISOC99: u32 = 1;
pub const __USE_ISOC95: u32 = 1;
pub const __USE_POSIX_IMPLICITLY: u32 = 1;
pub const _POSIX_SOURCE: u32 = 1;
pub const _POSIX_C_SOURCE: u32 = 200809;
pub const __USE_POSIX: u32 = 1;
pub const __USE_POSIX2: u32 = 1;
pub const __USE_POSIX199309: u32 = 1;
pub const __USE_POSIX199506: u32 = 1;
pub const __USE_XOPEN2K: u32 = 1;
pub const __USE_XOPEN2K8: u32 = 1;
pub const _ATFILE_SOURCE: u32 = 1;
pub const __WORDSIZE: u32 = 64;
pub const __WORDSIZE_TIME64_COMPAT32: u32 = 1;
pub const __SYSCALL_WORDSIZE: u32 = 64;
pub const __TIMESIZE: u32 = 64;
pub const __USE_TIME_BITS64: u32 = 1;
pub const __USE_MISC: u32 = 1;
pub const __USE_ATFILE: u32 = 1;
pub const __USE_FORTIFY_LEVEL: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_GETS: u32 = 0;
pub const __GLIBC_USE_DEPRECATED_SCANF: u32 = 0;
pub const __GLIBC_USE_C2X_STRTOL: u32 = 0;
pub const _STDC_PREDEF_H: u32 = 1;
pub const __STDC_IEC_559__: u32 = 1;
pub const __STDC_IEC_60559_BFP__: u32 = 201404;
pub const __STDC_IEC_559_COMPLEX__: u32 = 1;
pub const __STDC_IEC_60559_COMPLEX__: u32 = 201404;
pub const __STDC_ISO_10646__: u32 = 201706;
pub const __GNU_LIBRARY__: u32 = 6;
pub const __GLIBC__: u32 = 2;
pub const __GLIBC_MINOR__: u32 = 39;
pub const _SYS_CDEFS_H: u32 = 1;
pub const __glibc_c99_flexarr_available: u32 = 1;
pub const __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI: u32 = 0;
pub const __HAVE_GENERIC_SELECTION: u32 = 1;
pub const __GLIBC_USE_LIB_EXT2: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_BFP_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT: u32 = 0;
pub const __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X: u32 = 0;
pub const __GLIBC_USE_IEC_60559_TYPES_EXT: u32 = 0;
pub const _BITS_TYPES_H: u32 = 1;
pub const _BITS_TYPESIZES_H: u32 = 1;
pub const __OFF_T_MATCHES_OFF64_T: u32 = 1;
pub const __INO_T_MATCHES_INO64_T: u32 = 1;
pub const __RLIM_T_MATCHES_RLIM64_T: u32 = 1;
pub const __STATFS_MATCHES_STATFS64: u32 = 1;
pub const __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64: u32 = 1;
pub const __FD_SETSIZE: u32 = 1024;
pub const _BITS_TIME64_H: u32 = 1;
pub const _BITS_WCHAR_H: u32 = 1;
pub const _BITS_STDINT_INTN_H: u32 = 1;
pub const _BITS_STDINT_UINTN_H: u32 = 1;
pub const _BITS_STDINT_LEAST_H: u32 = 1;
pub const INT8_MIN: i32 = -128;
pub const INT16_MIN: i32 = -32768;
pub const INT32_MIN: i32 = -2147483648;
pub const INT8_MAX: u32 = 127;
pub const INT16_MAX: u32 = 32767;
pub const INT32_MAX: u32 = 2147483647;
pub const UINT8_MAX: u32 = 255;
pub const UINT16_MAX: u32 = 65535;
pub const UINT32_MAX: u32 = 4294967295;
pub const INT_LEAST8_MIN: i32 = -128;
pub const INT_LEAST16_MIN: i32 = -32768;
pub const INT_LEAST32_MIN: i32 = -2147483648;
pub const INT_LEAST8_MAX: u32 = 127;
pub const INT_LEAST16_MAX: u32 = 32767;
pub const INT_LEAST32_MAX: u32 = 2147483647;
pub const UINT_LEAST8_MAX: u32 = 255;
pub const UINT_LEAST16_MAX: u32 = 65535;
pub const UINT_LEAST32_MAX: u32 = 4294967295;
pub const INT_FAST8_MIN: i32 = -128;
pub const INT_FAST16_MIN: i64 = -9223372036854775808;
pub const INT_FAST32_MIN: i64 = -9223372036854775808;
pub const INT_FAST8_MAX: u32 = 127;
pub const INT_FAST16_MAX: u64 = 9223372036854775807;
pub const INT_FAST32_MAX: u64 = 9223372036854775807;
pub const UINT_FAST8_MAX: u32 = 255;
pub const UINT_FAST16_MAX: i32 = -1;
pub const UINT_FAST32_MAX: i32 = -1;
pub const INTPTR_MIN: i64 = -9223372036854775808;
pub const INTPTR_MAX: u64 = 9223372036854775807;
pub const UINTPTR_MAX: i32 = -1;
pub const PTRDIFF_MIN: i64 = -9223372036854775808;
pub const PTRDIFF_MAX: u64 = 9223372036854775807;
pub const SIG_ATOMIC_MIN: i32 = -2147483648;
pub const SIG_ATOMIC_MAX: u32 = 2147483647;
pub const SIZE_MAX: i32 = -1;
pub const WINT_MIN: u32 = 0;
pub const WINT_MAX: u32 = 4294967295;
pub const _INTTYPES_H: u32 = 1;
pub const ____gwchar_t_defined: u32 = 1;
pub const __PRI64_PREFIX: &[u8; 2] = b"l\0";
pub const __PRIPTR_PREFIX: &[u8; 2] = b"l\0";
pub const PRId8: &[u8; 2] = b"d\0";
pub const PRId16: &[u8; 2] = b"d\0";
pub const PRId32: &[u8; 2] = b"d\0";
pub const PRId64: &[u8; 3] = b"ld\0";
pub const PRIdLEAST8: &[u8; 2] = b"d\0";
pub const PRIdLEAST16: &[u8; 2] = b"d\0";
pub const PRIdLEAST32: &[u8; 2] = b"d\0";
pub const PRIdLEAST64: &[u8; 3] = b"ld\0";
pub const PRIdFAST8: &[u8; 2] = b"d\0";
pub const PRIdFAST16: &[u8; 3] = b"ld\0";
pub const PRIdFAST32: &[u8; 3] = b"ld\0";
pub const PRIdFAST64: &[u8; 3] = b"ld\0";
pub const PRIi8: &[u8; 2] = b"i\0";
pub const PRIi16: &[u8; 2] = b"i\0";
pub const PRIi32: &[u8; 2] = b"i\0";
pub const PRIi64: &[u8; 3] = b"li\0";
pub const PRIiLEAST8: &[u8; 2] = b"i\0";
pub const PRIiLEAST16: &[u8; 2] = b"i\0";
pub const PRIiLEAST32: &[u8; 2] = b"i\0";
pub const PRIiLEAST64: &[u8; 3] = b"li\0";
pub const PRIiFAST8: &[u8; 2] = b"i\0";
pub const PRIiFAST16: &[u8; 3] = b"li\0";
pub const PRIiFAST32: &[u8; 3] = b"li\0";
pub const PRIiFAST64: &[u8; 3] = b"li\0";
pub const PRIo8: &[u8; 2] = b"o\0";
pub const PRIo16: &[u8; 2] = b"o\0";
pub const PRIo32: &[u8; 2] = b"o\0";
pub const PRIo64: &[u8; 3] = b"lo\0";
pub const PRIoLEAST8: &[u8; 2] = b"o\0";
pub const PRIoLEAST16: &[u8; 2] = b"o\0";
pub const PRIoLEAST32: &[u8; 2] = b"o\0";
pub const PRIoLEAST64: &[u8; 3] = b"lo\0";
pub const PRIoFAST8: &[u8; 2] = b"o\0";
pub const PRIoFAST16: &[u8; 3] = b"lo\0";
pub const PRIoFAST32: &[u8; 3] = b"lo\0";
pub const PRIoFAST64: &[u8; 3] = b"lo\0";
pub const PRIu8: &[u8; 2] = b"u\0";
pub const PRIu16: &[u8; 2] = b"u\0";
pub const PRIu32: &[u8; 2] = b"u\0";
pub const PRIu64: &[u8; 3] = b"lu\0";
pub const PRIuLEAST8: &[u8; 2] = b"u\0";
pub const PRIuLEAST16: &[u8; 2] = b"u\0";
pub const PRIuLEAST32: &[u8; 2] = b"u\0";
pub const PRIuLEAST64: &[u8; 3] = b"lu\0";
pub const PRIuFAST8: &[u8; 2] = b"u\0";
pub const PRIuFAST16: &[u8; 3] = b"lu\0";
pub const PRIuFAST32: &[u8; 3] = b"lu\0";
pub const PRIuFAST64: &[u8; 3] = b"lu\0";
pub const PRIx8: &[u8; 2] = b"x\0";
pub const PRIx16: &[u8; 2] = b"x\0";
pub const PRIx32: &[u8; 2] = b"x\0";
pub const PRIx64: &[u8; 3] = b"lx\0";
pub const PRIxLEAST8: &[u8; 2] = b"x\0";
pub const PRIxLEAST16: &[u8; 2] = b"x\0";
pub const PRIxLEAST32: &[u8; 2] = b"x\0";
pub const PRIxLEAST64: &[u8; 3] = b"lx\0";
pub const PRIxFAST8: &[u8; 2] = b"x\0";
pub const PRIxFAST16: &[u8; 3] = b"lx\0";
pub const PRIxFAST32: &[u8; 3] = b"lx\0";
pub const PRIxFAST64: &[u8; 3] = b"lx\0";
pub const PRIX8: &[u8; 2] = b"X\0";
pub const PRIX16: &[u8; 2] = b"X\0";
pub const PRIX32: &[u8; 2] = b"X\0";
pub const PRIX64: &[u8; 3] = b"lX\0";
pub const PRIXLEAST8: &[u8; 2] = b"X\0";
pub const PRIXLEAST16: &[u8; 2] = b"X\0";
pub const PRIXLEAST32: &[u8; 2] = b"X\0";
pub const PRIXLEAST64: &[u8; 3] = b"lX\0";
pub const PRIXFAST8: &[u8; 2] = b"X\0";
pub const PRIXFAST16: &[u8; 3] = b"lX\0";
pub const PRIXFAST32: &[u8; 3] = b"lX\0";
pub const PRIXFAST64: &[u8; 3] = b"lX\0";
pub const PRIdMAX: &[u8; 3] = b"ld\0";
pub const PRIiMAX: &[u8; 3] = b"li\0";
pub const PRIoMAX: &[u8; 3] = b"lo\0";
pub const PRIuMAX: &[u8; 3] = b"lu\0";
pub const PRIxMAX: &[u8; 3] = b"lx\0";
pub const PRIXMAX: &[u8; 3] = b"lX\0";
pub const PRIdPTR: &[u8; 3] = b"ld\0";
pub const PRIiPTR: &[u8; 3] = b"li\0";
pub const PRIoPTR: &[u8; 3] = b"lo\0";
pub const PRIuPTR: &[u8; 3] = b"lu\0";
pub const PRIxPTR: &[u8; 3] = b"lx\0";
pub const PRIXPTR: &[u8; 3] = b"lX\0";
pub const SCNd8: &[u8; 4] = b"hhd\0";
pub const SCNd16: &[u8; 3] = b"hd\0";
pub const SCNd32: &[u8; 2] = b"d\0";
pub const SCNd64: &[u8; 3] = b"ld\0";
pub const SCNdLEAST8: &[u8; 4] = b"hhd\0";
pub const SCNdLEAST16: &[u8; 3] = b"hd\0";
pub const SCNdLEAST32: &[u8; 2] = b"d\0";
pub const SCNdLEAST64: &[u8; 3] = b"ld\0";
pub const SCNdFAST8: &[u8; 4] = b"hhd\0";
pub const SCNdFAST16: &[u8; 3] = b"ld\0";
pub const SCNdFAST32: &[u8; 3] = b"ld\0";
pub const SCNdFAST64: &[u8; 3] = b"ld\0";
pub const SCNi8: &[u8; 4] = b"hhi\0";
pub const SCNi16: &[u8; 3] = b"hi\0";
pub const SCNi32: &[u8; 2] = b"i\0";
pub const SCNi64: &[u8; 3] = b"li\0";
pub const SCNiLEAST8: &[u8; 4] = b"hhi\0";
pub const SCNiLEAST16: &[u8; 3] = b"hi\0";
pub const SCNiLEAST32: &[u8; 2] = b"i\0";
pub const SCNiLEAST64: &[u8; 3] = b"li\0";
pub const SCNiFAST8: &[u8; 4] = b"hhi\0";
pub const SCNiFAST16: &[u8; 3] = b"li\0";
pub const SCNiFAST32: &[u8; 3] = b"li\0";
pub const SCNiFAST64: &[u8; 3] = b"li\0";
pub const SCNu8: &[u8; 4] = b"hhu\0";
pub const SCNu16: &[u8; 3] = b"hu\0";
pub const SCNu32: &[u8; 2] = b"u\0";
pub const SCNu64: &[u8; 3] = b"lu\0";
pub const SCNuLEAST8: &[u8; 4] = b"hhu\0";
pub const SCNuLEAST16: &[u8; 3] = b"hu\0";
pub const SCNuLEAST32: &[u8; 2] = b"u\0";
pub const SCNuLEAST64: &[u8; 3] = b"lu\0";
pub const SCNuFAST8: &[u8; 4] = b"hhu\0";
pub const SCNuFAST16: &[u8; 3] = b"lu\0";
pub const SCNuFAST32: &[u8; 3] = b"lu\0";
pub const SCNuFAST64: &[u8; 3] = b"lu\0";
pub const SCNo8: &[u8; 4] = b"hho\0";
pub const SCNo16: &[u8; 3] = b"ho\0";
pub const SCNo32: &[u8; 2] = b"o\0";
pub const SCNo64: &[u8; 3] = b"lo\0";
pub const SCNoLEAST8: &[u8; 4] = b"hho\0";
pub const SCNoLEAST16: &[u8; 3] = b"ho\0";
pub const SCNoLEAST32: &[u8; 2] = b"o\0";
pub const SCNoLEAST64: &[u8; 3] = b"lo\0";
pub const SCNoFAST8: &[u8; 4] = b"hho\0";
pub const SCNoFAST16: &[u8; 3] = b"lo\0";
pub const SCNoFAST32: &[u8; 3] = b"lo\0";
pub const SCNoFAST64: &[u8; 3] = b"lo\0";
pub const SCNx8: &[u8; 4] = b"hhx\0";
pub const SCNx16: &[u8; 3] = b"hx\0";
pub const SCNx32: &[u8; 2] = b"x\0";
pub const SCNx64: &[u8; 3] = b"lx\0";
pub const SCNxLEAST8: &[u8; 4] = b"hhx\0";
pub const SCNxLEAST16: &[u8; 3] = b"hx\0";
pub const SCNxLEAST32: &[u8; 2] = b"x\0";
pub const SCNxLEAST64: &[u8; 3] = b"lx\0";
pub const SCNxFAST8: &[u8; 4] = b"hhx\0";
pub const SCNxFAST16: &[u8; 3] = b"lx\0";
pub const SCNxFAST32: &[u8; 3] = b"lx\0";
pub const SCNxFAST64: &[u8; 3] = b"lx\0";
pub const SCNdMAX: &[u8; 3] = b"ld\0";
pub const SCNiMAX: &[u8; 3] = b"li\0";
pub const SCNoMAX: &[u8; 3] = b"lo\0";
pub const SCNuMAX: &[u8; 3] = b"lu\0";
pub const SCNxMAX: &[u8; 3] = b"lx\0";
pub const SCNdPTR: &[u8; 3] = b"ld\0";
pub const SCNiPTR: &[u8; 3] = b"li\0";
pub const SCNoPTR: &[u8; 3] = b"lo\0";
pub const SCNuPTR: &[u8; 3] = b"lu\0";
pub const SCNxPTR: &[u8; 3] = b"lx\0";
pub const AOM_IMAGE_ABI_VERSION: u32 = 9;
pub const AOM_IMG_FMT_PLANAR: u32 = 256;
pub const AOM_IMG_FMT_UV_FLIP: u32 = 512;
pub const AOM_IMG_FMT_HIGHBITDEPTH: u32 = 2048;
pub const AOM_HAVE_IMG_FMT_NV12: u32 = 1;
pub const AOM_PLANE_PACKED: u32 = 0;
pub const AOM_PLANE_Y: u32 = 0;
pub const AOM_PLANE_U: u32 = 1;
pub const AOM_PLANE_V: u32 = 2;
pub const AOM_CODEC_ABI_VERSION: u32 = 16;
pub const AOM_CODEC_CAP_DECODER: u32 = 1;
pub const AOM_CODEC_CAP_ENCODER: u32 = 2;
pub const AOM_CODEC_USE_EXPERIMENTAL: u32 = 1;
pub const AOM_FRAME_IS_KEY: u32 = 1;
pub const AOM_FRAME_IS_DROPPABLE: u32 = 2;
pub const AOM_FRAME_IS_INTRAONLY: u32 = 16;
pub const AOM_FRAME_IS_SWITCH: u32 = 32;
pub const AOM_FRAME_IS_ERROR_RESILIENT: u32 = 64;
pub const AOM_FRAME_IS_DELAYED_RANDOM_ACCESS_POINT: u32 = 128;
pub const AOM_EXT_PART_ABI_VERSION: u32 = 8;
pub const AOM_EXT_PART_SIZE_DIRECT_SPLIT: u32 = 17;
pub const AOM_EXT_PART_SIZE_PRUNE_PART: u32 = 25;
pub const AOM_EXT_PART_SIZE_PRUNE_NONE: u32 = 4;
pub const AOM_EXT_PART_SIZE_TERM_NONE: u32 = 28;
pub const AOM_EXT_PART_SIZE_TERM_SPLIT: u32 = 31;
pub const AOM_EXT_PART_SIZE_PRUNE_RECT: u32 = 9;
pub const AOM_EXT_PART_SIZE_PRUNE_AB: u32 = 10;
pub const AOM_EXT_PART_SIZE_PRUNE_4_WAY: u32 = 18;
pub const AOM_ENCODER_ABI_VERSION: u32 = 29;
pub const AOM_CODEC_CAP_PSNR: u32 = 65536;
pub const AOM_CODEC_CAP_HIGHBITDEPTH: u32 = 262144;
pub const AOM_CODEC_USE_PSNR: u32 = 65536;
pub const AOM_CODEC_USE_HIGHBITDEPTH: u32 = 262144;
pub const AOM_ERROR_RESILIENT_DEFAULT: u32 = 1;
pub const AOM_EFLAG_FORCE_KF: u32 = 1;
pub const MAX_TILE_WIDTHS: u32 = 64;
pub const MAX_TILE_HEIGHTS: u32 = 64;
pub const AOM_USAGE_GOOD_QUALITY: u32 = 0;
pub const AOM_USAGE_REALTIME: u32 = 1;
pub const AOM_USAGE_ALL_INTRA: u32 = 2;
pub const AOM_EFLAG_NO_REF_LAST: u32 = 65536;
pub const AOM_EFLAG_NO_REF_LAST2: u32 = 131072;
pub const AOM_EFLAG_NO_REF_LAST3: u32 = 262144;
pub const AOM_EFLAG_NO_REF_GF: u32 = 524288;
pub const AOM_EFLAG_NO_REF_ARF: u32 = 1048576;
pub const AOM_EFLAG_NO_REF_BWD: u32 = 2097152;
pub const AOM_EFLAG_NO_REF_ARF2: u32 = 4194304;
pub const AOM_EFLAG_NO_UPD_LAST: u32 = 8388608;
pub const AOM_EFLAG_NO_UPD_GF: u32 = 16777216;
pub const AOM_EFLAG_NO_UPD_ARF: u32 = 33554432;
pub const AOM_EFLAG_NO_UPD_ENTROPY: u32 = 67108864;
pub const AOM_EFLAG_NO_REF_FRAME_MVS: u32 = 134217728;
pub const AOM_EFLAG_ERROR_RESILIENT: u32 = 268435456;
pub const AOM_EFLAG_SET_S_FRAME: u32 = 536870912;
pub const AOM_EFLAG_SET_PRIMARY_REF_NONE: u32 = 1073741824;
pub const AOM_MAX_SEGMENTS: u32 = 8;
pub const AOM_HAVE_TUNE_IQ: u32 = 1;
pub const AOM_MAX_LAYERS: u32 = 32;
pub const AOM_MAX_SS_LAYERS: u32 = 4;
pub const AOM_MAX_TS_LAYERS: u32 = 8;
pub type wchar_t = ::std::os::raw::c_int;
#[repr(C)]
#[repr(align(16))]
#[derive(Debug, Copy, Clone)]
pub struct max_align_t {
    pub __clang_max_align_nonce1: ::std::os::raw::c_longlong,
    pub __bindgen_padding_0: u64,
    pub __clang_max_align_nonce2: u128,
}
pub type __u_char = ::std::os::raw::c_uchar;
pub type __u_short = ::std::os::raw::c_ushort;
pub type __u_int = ::std::os::raw::c_uint;
pub type __u_long = ::std::os::raw::c_ulong;
pub type __int8_t = ::std::os::raw::c_schar;
pub type __uint8_t = ::std::os::raw::c_uchar;
pub type __int16_t = ::std::os::raw::c_short;
pub type __uint16_t = ::std::os::raw::c_ushort;
pub type __int32_t = ::std::os::raw::c_int;
pub type __uint32_t = ::std::os::raw::c_uint;
pub type __int64_t = ::std::os::raw::c_long;
pub type __uint64_t = ::std::os::raw::c_ulong;
pub type __int_least8_t = __int8_t;
pub type __uint_least8_t = __uint8_t;
pub type __int_least16_t = __int16_t;
pub type __uint_least16_t = __uint16_t;
pub type __int_least32_t = __int32_t;
pub type __uint_least32_t = __uint32_t;
pub type __int_least64_t = __int64_t;
pub type __uint_least64_t = __uint64_t;
pub type __quad_t = ::std::os::raw::c_long;
pub type __u_quad_t = ::std::os::raw::c_ulong;
pub type __intmax_t = ::std::os::raw::c_long;
pub type __uintmax_t = ::std::os::raw::c_ulong;
pub type __dev_t = ::std::os::raw::c_ulong;
pub type __uid_t = ::std::os::raw::c_uint;
pub type __gid_t = ::std::os::raw::c_uint;
pub type __ino_t = ::std::os::raw::c_ulong;
pub type __ino64_t = ::std::os::raw::c_ulong;
pub type __mode_t = ::std::os::raw::c_uint;
pub type __nlink_t = ::std::os::raw::c_ulong;
pub type __off_t = ::std::os::raw::c_long;
pub type __off64_t = ::std::os::raw::c_long;
pub type __pid_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct __fsid_t {
    pub __val: [::std::os::raw::c_int; 2usize],
}
pub type __clock_t = ::std::os::raw::c_long;
pub type __rlim_t = ::std::os::raw::c_ulong;
pub type __rlim64_t = ::std::os::raw::c_ulong;
pub type __id_t = ::std::os::raw::c_uint;
pub type __time_t = ::std::os::raw::c_long;
pub type __useconds_t = ::std::os::raw::c_uint;
pub type __suseconds_t = ::std::os::raw::c_long;
pub type __suseconds64_t = ::std::os::raw::c_long;
pub type __daddr_t = ::std::os::raw::c_int;
pub type __key_t = ::std::os::raw::c_int;
pub type __clockid_t = ::std::os::raw::c_int;
pub type __timer_t = *mut ::std::os::raw::c_void;
pub type __blksize_t = ::std::os::raw::c_long;
pub type __blkcnt_t = ::std::os::raw::c_long;
pub type __blkcnt64_t = ::std::os::raw::c_long;
pub type __fsblkcnt_t = ::std::os::raw::c_ulong;
pub type __fsblkcnt64_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt_t = ::std::os::raw::c_ulong;
pub type __fsfilcnt64_t = ::std::os::raw::c_ulong;
pub type __fsword_t = ::std::os::raw::c_long;
pub type __ssize_t = ::std::os::raw::c_long;
pub type __syscall_slong_t = ::std::os::raw::c_long;
pub type __syscall_ulong_t = ::std::os::raw::c_ulong;
pub type __loff_t = __off64_t;
pub type __caddr_t = *mut ::std::os::raw::c_char;
pub type __intptr_t = ::std::os::raw::c_long;
pub type __socklen_t = ::std::os::raw::c_uint;
pub type __sig_atomic_t = ::std::os::raw::c_int;
pub type int_least8_t = __int_least8_t;
pub type int_least16_t = __int_least16_t;
pub type int_least32_t = __int_least32_t;
pub type int_least64_t = __int_least64_t;
pub type uint_least8_t = __uint_least8_t;
pub type uint_least16_t = __uint_least16_t;
pub type uint_least32_t = __uint_least32_t;
pub type uint_least64_t = __uint_least64_t;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type int_fast16_t = ::std::os::raw::c_long;
pub type int_fast32_t = ::std::os::raw::c_long;
pub type int_fast64_t = ::std::os::raw::c_long;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type uint_fast16_t = ::std::os::raw::c_ulong;
pub type uint_fast32_t = ::std::os::raw::c_ulong;
pub type uint_fast64_t = ::std::os::raw::c_ulong;
pub type intmax_t = __intmax_t;
pub type uintmax_t = __uintmax_t;
pub type __gwchar_t = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct imaxdiv_t {
    pub quot: ::std::os::raw::c_long,
    pub rem: ::std::os::raw::c_long,
}
extern "C" {
    pub fn imaxabs(__n: intmax_t) -> intmax_t;
}
extern "C" {
    pub fn imaxdiv(__numer: intmax_t, __denom: intmax_t) -> imaxdiv_t;
}
extern "C" {
    pub fn strtoimax(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> intmax_t;
}
extern "C" {
    pub fn strtoumax(
        __nptr: *const ::std::os::raw::c_char,
        __endptr: *mut *mut ::std::os::raw::c_char,
        __base: ::std::os::raw::c_int,
    ) -> uintmax_t;
}
extern "C" {
    pub fn wcstoimax(
        __nptr: *const __gwchar_t,
        __endptr: *mut *mut __gwchar_t,
        __base: ::std::os::raw::c_int,
    ) -> intmax_t;
}
extern "C" {
    pub fn wcstoumax(
        __nptr: *const __gwchar_t,
        __endptr: *mut *mut __gwchar_t,
        __base: ::std::os::raw::c_int,
    ) -> uintmax_t;
}
extern "C" {
    pub fn aom_uleb_size_in_bytes(value: u64) -> usize;
}
extern "C" {
    pub fn aom_uleb_decode(
        buffer: *const u8,
        available: usize,
        value: *mut u64,
        length: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn aom_uleb_encode(
        value: u64,
        available: usize,
        coded_value: *mut u8,
        coded_size: *mut usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn aom_uleb_encode_fixed_size(
        value: u64,
        available: usize,
        pad_to_size: usize,
        coded_value: *mut u8,
        coded_size: *mut usize,
    ) -> ::std::os::raw::c_int;
}
pub const aom_img_fmt_AOM_IMG_FMT_NONE: aom_img_fmt = 0;
pub const aom_img_fmt_AOM_IMG_FMT_YV12: aom_img_fmt = 769;
pub const aom_img_fmt_AOM_IMG_FMT_I420: aom_img_fmt = 258;
pub const aom_img_fmt_AOM_IMG_FMT_AOMYV12: aom_img_fmt = 771;
pub const aom_img_fmt_AOM_IMG_FMT_AOMI420: aom_img_fmt = 260;
pub const aom_img_fmt_AOM_IMG_FMT_I422: aom_img_fmt = 261;
pub const aom_img_fmt_AOM_IMG_FMT_I444: aom_img_fmt = 262;
pub const aom_img_fmt_AOM_IMG_FMT_NV12: aom_img_fmt = 263;
pub const aom_img_fmt_AOM_IMG_FMT_I42016: aom_img_fmt = 2306;
pub const aom_img_fmt_AOM_IMG_FMT_YV1216: aom_img_fmt = 2817;
pub const aom_img_fmt_AOM_IMG_FMT_I42216: aom_img_fmt = 2309;
pub const aom_img_fmt_AOM_IMG_FMT_I44416: aom_img_fmt = 2310;
pub type aom_img_fmt = ::std::os::raw::c_uint;
pub use self::aom_img_fmt as aom_img_fmt_t;
pub const aom_color_primaries_AOM_CICP_CP_RESERVED_0: aom_color_primaries = 0;
pub const aom_color_primaries_AOM_CICP_CP_BT_709: aom_color_primaries = 1;
pub const aom_color_primaries_AOM_CICP_CP_UNSPECIFIED: aom_color_primaries = 2;
pub const aom_color_primaries_AOM_CICP_CP_RESERVED_3: aom_color_primaries = 3;
pub const aom_color_primaries_AOM_CICP_CP_BT_470_M: aom_color_primaries = 4;
pub const aom_color_primaries_AOM_CICP_CP_BT_470_B_G: aom_color_primaries = 5;
pub const aom_color_primaries_AOM_CICP_CP_BT_601: aom_color_primaries = 6;
pub const aom_color_primaries_AOM_CICP_CP_SMPTE_240: aom_color_primaries = 7;
pub const aom_color_primaries_AOM_CICP_CP_GENERIC_FILM: aom_color_primaries = 8;
pub const aom_color_primaries_AOM_CICP_CP_BT_2020: aom_color_primaries = 9;
pub const aom_color_primaries_AOM_CICP_CP_XYZ: aom_color_primaries = 10;
pub const aom_color_primaries_AOM_CICP_CP_SMPTE_431: aom_color_primaries = 11;
pub const aom_color_primaries_AOM_CICP_CP_SMPTE_432: aom_color_primaries = 12;
pub const aom_color_primaries_AOM_CICP_CP_RESERVED_13: aom_color_primaries = 13;
pub const aom_color_primaries_AOM_CICP_CP_EBU_3213: aom_color_primaries = 22;
pub const aom_color_primaries_AOM_CICP_CP_RESERVED_23: aom_color_primaries = 23;
pub type aom_color_primaries = ::std::os::raw::c_uint;
pub use self::aom_color_primaries as aom_color_primaries_t;
pub const aom_transfer_characteristics_AOM_CICP_TC_RESERVED_0: aom_transfer_characteristics = 0;
pub const aom_transfer_characteristics_AOM_CICP_TC_BT_709: aom_transfer_characteristics = 1;
pub const aom_transfer_characteristics_AOM_CICP_TC_UNSPECIFIED: aom_transfer_characteristics = 2;
pub const aom_transfer_characteristics_AOM_CICP_TC_RESERVED_3: aom_transfer_characteristics = 3;
pub const aom_transfer_characteristics_AOM_CICP_TC_BT_470_M: aom_transfer_characteristics = 4;
pub const aom_transfer_characteristics_AOM_CICP_TC_BT_470_B_G: aom_transfer_characteristics = 5;
pub const aom_transfer_characteristics_AOM_CICP_TC_BT_601: aom_transfer_characteristics = 6;
pub const aom_transfer_characteristics_AOM_CICP_TC_SMPTE_240: aom_transfer_characteristics = 7;
pub const aom_transfer_characteristics_AOM_CICP_TC_LINEAR: aom_transfer_characteristics = 8;
pub const aom_transfer_characteristics_AOM_CICP_TC_LOG_100: aom_transfer_characteristics = 9;
pub const aom_transfer_characteristics_AOM_CICP_TC_LOG_100_SQRT10: aom_transfer_characteristics =
    10;
pub const aom_transfer_characteristics_AOM_CICP_TC_IEC_61966: aom_transfer_characteristics = 11;
pub const aom_transfer_characteristics_AOM_CICP_TC_BT_1361: aom_transfer_characteristics = 12;
pub const aom_transfer_characteristics_AOM_CICP_TC_SRGB: aom_transfer_characteristics = 13;
pub const aom_transfer_characteristics_AOM_CICP_TC_BT_2020_10_BIT: aom_transfer_characteristics =
    14;
pub const aom_transfer_characteristics_AOM_CICP_TC_BT_2020_12_BIT: aom_transfer_characteristics =
    15;
pub const aom_transfer_characteristics_AOM_CICP_TC_SMPTE_2084: aom_transfer_characteristics = 16;
pub const aom_transfer_characteristics_AOM_CICP_TC_SMPTE_428: aom_transfer_characteristics = 17;
pub const aom_transfer_characteristics_AOM_CICP_TC_HLG: aom_transfer_characteristics = 18;
pub const aom_transfer_characteristics_AOM_CICP_TC_RESERVED_19: aom_transfer_characteristics = 19;
pub type aom_transfer_characteristics = ::std::os::raw::c_uint;
pub use self::aom_transfer_characteristics as aom_transfer_characteristics_t;
pub const aom_matrix_coefficients_AOM_CICP_MC_IDENTITY: aom_matrix_coefficients = 0;
pub const aom_matrix_coefficients_AOM_CICP_MC_BT_709: aom_matrix_coefficients = 1;
pub const aom_matrix_coefficients_AOM_CICP_MC_UNSPECIFIED: aom_matrix_coefficients = 2;
pub const aom_matrix_coefficients_AOM_CICP_MC_RESERVED_3: aom_matrix_coefficients = 3;
pub const aom_matrix_coefficients_AOM_CICP_MC_FCC: aom_matrix_coefficients = 4;
pub const aom_matrix_coefficients_AOM_CICP_MC_BT_470_B_G: aom_matrix_coefficients = 5;
pub const aom_matrix_coefficients_AOM_CICP_MC_BT_601: aom_matrix_coefficients = 6;
pub const aom_matrix_coefficients_AOM_CICP_MC_SMPTE_240: aom_matrix_coefficients = 7;
pub const aom_matrix_coefficients_AOM_CICP_MC_SMPTE_YCGCO: aom_matrix_coefficients = 8;
pub const aom_matrix_coefficients_AOM_CICP_MC_BT_2020_NCL: aom_matrix_coefficients = 9;
pub const aom_matrix_coefficients_AOM_CICP_MC_BT_2020_CL: aom_matrix_coefficients = 10;
pub const aom_matrix_coefficients_AOM_CICP_MC_SMPTE_2085: aom_matrix_coefficients = 11;
pub const aom_matrix_coefficients_AOM_CICP_MC_CHROMAT_NCL: aom_matrix_coefficients = 12;
pub const aom_matrix_coefficients_AOM_CICP_MC_CHROMAT_CL: aom_matrix_coefficients = 13;
pub const aom_matrix_coefficients_AOM_CICP_MC_ICTCP: aom_matrix_coefficients = 14;
pub const aom_matrix_coefficients_AOM_CICP_MC_RESERVED_15: aom_matrix_coefficients = 15;
pub type aom_matrix_coefficients = ::std::os::raw::c_uint;
pub use self::aom_matrix_coefficients as aom_matrix_coefficients_t;
pub const aom_color_range_AOM_CR_STUDIO_RANGE: aom_color_range = 0;
pub const aom_color_range_AOM_CR_FULL_RANGE: aom_color_range = 1;
pub type aom_color_range = ::std::os::raw::c_uint;
pub use self::aom_color_range as aom_color_range_t;
pub const aom_chroma_sample_position_AOM_CSP_UNKNOWN: aom_chroma_sample_position = 0;
pub const aom_chroma_sample_position_AOM_CSP_VERTICAL: aom_chroma_sample_position = 1;
pub const aom_chroma_sample_position_AOM_CSP_COLOCATED: aom_chroma_sample_position = 2;
pub const aom_chroma_sample_position_AOM_CSP_RESERVED: aom_chroma_sample_position = 3;
pub type aom_chroma_sample_position = ::std::os::raw::c_uint;
pub use self::aom_chroma_sample_position as aom_chroma_sample_position_t;
pub const aom_metadata_insert_flags_AOM_MIF_NON_KEY_FRAME: aom_metadata_insert_flags = 0;
pub const aom_metadata_insert_flags_AOM_MIF_KEY_FRAME: aom_metadata_insert_flags = 1;
pub const aom_metadata_insert_flags_AOM_MIF_ANY_FRAME: aom_metadata_insert_flags = 2;
pub type aom_metadata_insert_flags = ::std::os::raw::c_uint;
pub use self::aom_metadata_insert_flags as aom_metadata_insert_flags_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_metadata_array {
    _unused: [u8; 0],
}
pub type aom_metadata_array_t = aom_metadata_array;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_metadata {
    pub type_: u32,
    pub payload: *mut u8,
    pub sz: usize,
    pub insert_flag: aom_metadata_insert_flags_t,
}
pub type aom_metadata_t = aom_metadata;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_image {
    pub fmt: aom_img_fmt_t,
    pub cp: aom_color_primaries_t,
    pub tc: aom_transfer_characteristics_t,
    pub mc: aom_matrix_coefficients_t,
    pub monochrome: ::std::os::raw::c_int,
    pub csp: aom_chroma_sample_position_t,
    pub range: aom_color_range_t,
    pub w: ::std::os::raw::c_uint,
    pub h: ::std::os::raw::c_uint,
    pub bit_depth: ::std::os::raw::c_uint,
    pub d_w: ::std::os::raw::c_uint,
    pub d_h: ::std::os::raw::c_uint,
    pub r_w: ::std::os::raw::c_uint,
    pub r_h: ::std::os::raw::c_uint,
    pub x_chroma_shift: ::std::os::raw::c_uint,
    pub y_chroma_shift: ::std::os::raw::c_uint,
    pub planes: [*mut ::std::os::raw::c_uchar; 3usize],
    pub stride: [::std::os::raw::c_int; 3usize],
    pub sz: usize,
    pub bps: ::std::os::raw::c_int,
    pub temporal_id: ::std::os::raw::c_int,
    pub spatial_id: ::std::os::raw::c_int,
    pub user_priv: *mut ::std::os::raw::c_void,
    pub img_data: *mut ::std::os::raw::c_uchar,
    pub img_data_owner: ::std::os::raw::c_int,
    pub self_allocd: ::std::os::raw::c_int,
    pub metadata: *mut aom_metadata_array_t,
    pub fb_priv: *mut ::std::os::raw::c_void,
}
pub type aom_image_t = aom_image;
extern "C" {
    pub fn aom_img_alloc(
        img: *mut aom_image_t,
        fmt: aom_img_fmt_t,
        d_w: ::std::os::raw::c_uint,
        d_h: ::std::os::raw::c_uint,
        align: ::std::os::raw::c_uint,
    ) -> *mut aom_image_t;
}
extern "C" {
    pub fn aom_img_wrap(
        img: *mut aom_image_t,
        fmt: aom_img_fmt_t,
        d_w: ::std::os::raw::c_uint,
        d_h: ::std::os::raw::c_uint,
        align: ::std::os::raw::c_uint,
        img_data: *mut ::std::os::raw::c_uchar,
    ) -> *mut aom_image_t;
}
extern "C" {
    pub fn aom_img_alloc_with_border(
        img: *mut aom_image_t,
        fmt: aom_img_fmt_t,
        d_w: ::std::os::raw::c_uint,
        d_h: ::std::os::raw::c_uint,
        align: ::std::os::raw::c_uint,
        size_align: ::std::os::raw::c_uint,
        border: ::std::os::raw::c_uint,
    ) -> *mut aom_image_t;
}
extern "C" {
    pub fn aom_img_set_rect(
        img: *mut aom_image_t,
        x: ::std::os::raw::c_uint,
        y: ::std::os::raw::c_uint,
        w: ::std::os::raw::c_uint,
        h: ::std::os::raw::c_uint,
        border: ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn aom_img_flip(img: *mut aom_image_t);
}
extern "C" {
    pub fn aom_img_free(img: *mut aom_image_t);
}
extern "C" {
    pub fn aom_img_plane_width(
        img: *const aom_image_t,
        plane: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn aom_img_plane_height(
        img: *const aom_image_t,
        plane: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn aom_img_add_metadata(
        img: *mut aom_image_t,
        type_: u32,
        data: *const u8,
        sz: usize,
        insert_flag: aom_metadata_insert_flags_t,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn aom_img_get_metadata(img: *const aom_image_t, index: usize) -> *const aom_metadata_t;
}
extern "C" {
    pub fn aom_img_num_metadata(img: *const aom_image_t) -> usize;
}
extern "C" {
    pub fn aom_img_remove_metadata(img: *mut aom_image_t);
}
extern "C" {
    pub fn aom_img_metadata_alloc(
        type_: u32,
        data: *const u8,
        sz: usize,
        insert_flag: aom_metadata_insert_flags_t,
    ) -> *mut aom_metadata_t;
}
extern "C" {
    pub fn aom_img_metadata_free(metadata: *mut aom_metadata_t);
}
pub const aom_codec_err_t_AOM_CODEC_OK: aom_codec_err_t = 0;
pub const aom_codec_err_t_AOM_CODEC_ERROR: aom_codec_err_t = 1;
pub const aom_codec_err_t_AOM_CODEC_MEM_ERROR: aom_codec_err_t = 2;
pub const aom_codec_err_t_AOM_CODEC_ABI_MISMATCH: aom_codec_err_t = 3;
pub const aom_codec_err_t_AOM_CODEC_INCAPABLE: aom_codec_err_t = 4;
pub const aom_codec_err_t_AOM_CODEC_UNSUP_BITSTREAM: aom_codec_err_t = 5;
pub const aom_codec_err_t_AOM_CODEC_UNSUP_FEATURE: aom_codec_err_t = 6;
pub const aom_codec_err_t_AOM_CODEC_CORRUPT_FRAME: aom_codec_err_t = 7;
pub const aom_codec_err_t_AOM_CODEC_INVALID_PARAM: aom_codec_err_t = 8;
pub const aom_codec_err_t_AOM_CODEC_LIST_END: aom_codec_err_t = 9;
pub type aom_codec_err_t = ::std::os::raw::c_uint;
pub type aom_codec_caps_t = ::std::os::raw::c_long;
pub type aom_codec_flags_t = ::std::os::raw::c_long;
pub type aom_codec_pts_t = i64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_codec_iface {
    _unused: [u8; 0],
}
pub type aom_codec_iface_t = aom_codec_iface;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_codec_priv {
    _unused: [u8; 0],
}
pub type aom_codec_priv_t = aom_codec_priv;
pub type aom_codec_frame_flags_t = u32;
pub type aom_codec_iter_t = *const ::std::os::raw::c_void;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct aom_codec_ctx {
    pub name: *const ::std::os::raw::c_char,
    pub iface: *const aom_codec_iface,
    pub err: aom_codec_err_t,
    pub err_detail: *const ::std::os::raw::c_char,
    pub init_flags: aom_codec_flags_t,
    pub config: aom_codec_ctx__bindgen_ty_1,
    pub priv_: *mut aom_codec_priv_t,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union aom_codec_ctx__bindgen_ty_1 {
    pub dec: *mut aom_codec_dec_cfg,
    pub enc: *const aom_codec_enc_cfg,
    pub raw: *const ::std::os::raw::c_void,
}
pub type aom_codec_ctx_t = aom_codec_ctx;
pub const aom_bit_depth_AOM_BITS_8: aom_bit_depth = 8;
pub const aom_bit_depth_AOM_BITS_10: aom_bit_depth = 10;
pub const aom_bit_depth_AOM_BITS_12: aom_bit_depth = 12;
pub type aom_bit_depth = ::std::os::raw::c_uint;
pub use self::aom_bit_depth as aom_bit_depth_t;
pub const aom_superblock_size_AOM_SUPERBLOCK_SIZE_64X64: aom_superblock_size = 0;
pub const aom_superblock_size_AOM_SUPERBLOCK_SIZE_128X128: aom_superblock_size = 1;
pub const aom_superblock_size_AOM_SUPERBLOCK_SIZE_DYNAMIC: aom_superblock_size = 2;
pub type aom_superblock_size = ::std::os::raw::c_uint;
pub use self::aom_superblock_size as aom_superblock_size_t;
extern "C" {
    pub fn aom_codec_version() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn aom_codec_version_str() -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn aom_codec_version_extra_str() -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn aom_codec_build_config() -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn aom_codec_iface_name(iface: *const aom_codec_iface) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn aom_codec_err_to_string(err: aom_codec_err_t) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn aom_codec_error(ctx: *const aom_codec_ctx_t) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn aom_codec_error_detail(ctx: *const aom_codec_ctx_t) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn aom_codec_destroy(ctx: *mut aom_codec_ctx_t) -> aom_codec_err_t;
}
extern "C" {
    pub fn aom_codec_get_caps(iface: *const aom_codec_iface) -> aom_codec_caps_t;
}
extern "C" {
    pub fn aom_codec_control(
        ctx: *mut aom_codec_ctx_t,
        ctrl_id: ::std::os::raw::c_int,
        ...
    ) -> aom_codec_err_t;
}
extern "C" {
    pub fn aom_codec_set_option(
        ctx: *mut aom_codec_ctx_t,
        name: *const ::std::os::raw::c_char,
        value: *const ::std::os::raw::c_char,
    ) -> aom_codec_err_t;
}
pub const OBU_TYPE_OBU_SEQUENCE_HEADER: OBU_TYPE = 1;
pub const OBU_TYPE_OBU_TEMPORAL_DELIMITER: OBU_TYPE = 2;
pub const OBU_TYPE_OBU_FRAME_HEADER: OBU_TYPE = 3;
pub const OBU_TYPE_OBU_TILE_GROUP: OBU_TYPE = 4;
pub const OBU_TYPE_OBU_METADATA: OBU_TYPE = 5;
pub const OBU_TYPE_OBU_FRAME: OBU_TYPE = 6;
pub const OBU_TYPE_OBU_REDUNDANT_FRAME_HEADER: OBU_TYPE = 7;
pub const OBU_TYPE_OBU_TILE_LIST: OBU_TYPE = 8;
pub const OBU_TYPE_OBU_PADDING: OBU_TYPE = 15;
pub type OBU_TYPE = ::std::os::raw::c_uchar;
pub const OBU_METADATA_TYPE_OBU_METADATA_TYPE_AOM_RESERVED_0: OBU_METADATA_TYPE = 0;
pub const OBU_METADATA_TYPE_OBU_METADATA_TYPE_HDR_CLL: OBU_METADATA_TYPE = 1;
pub const OBU_METADATA_TYPE_OBU_METADATA_TYPE_HDR_MDCV: OBU_METADATA_TYPE = 2;
pub const OBU_METADATA_TYPE_OBU_METADATA_TYPE_SCALABILITY: OBU_METADATA_TYPE = 3;
pub const OBU_METADATA_TYPE_OBU_METADATA_TYPE_ITUT_T35: OBU_METADATA_TYPE = 4;
pub const OBU_METADATA_TYPE_OBU_METADATA_TYPE_TIMECODE: OBU_METADATA_TYPE = 5;
pub type OBU_METADATA_TYPE = ::std::os::raw::c_uint;
extern "C" {
    pub fn aom_obu_type_to_string(type_: OBU_TYPE) -> *const ::std::os::raw::c_char;
}
pub type aom_ext_part_model_t = *mut ::std::os::raw::c_void;
pub const aom_ext_part_decision_mode_AOM_EXT_PART_WHOLE_TREE: aom_ext_part_decision_mode = 0;
pub const aom_ext_part_decision_mode_AOM_EXT_PART_RECURSIVE: aom_ext_part_decision_mode = 1;
pub type aom_ext_part_decision_mode = ::std::os::raw::c_uint;
pub use self::aom_ext_part_decision_mode as aom_ext_part_decision_mode_t;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_ext_part_config {
    pub superblock_size: ::std::os::raw::c_int,
}
pub type aom_ext_part_config_t = aom_ext_part_config;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_partition_features_before_none {
    pub f: [f32; 17usize],
    pub f_part2: [f32; 25usize],
}
pub type aom_partition_features_before_none_t = aom_partition_features_before_none;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_partition_features_none {
    pub f: [f32; 4usize],
    pub f_terminate: [f32; 28usize],
}
pub type aom_partition_features_none_t = aom_partition_features_none;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_partition_features_split {
    pub f_terminate: [f32; 31usize],
    pub f_prune_rect: [f32; 9usize],
}
pub type aom_partition_features_split_t = aom_partition_features_split;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_partition_features_rect {
    pub f: [f32; 10usize],
}
pub type aom_partition_features_rect_t = aom_partition_features_rect;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_partition_features_ab {
    pub f: [f32; 18usize],
}
pub type aom_partition_features_ab_t = aom_partition_features_ab;
pub const AOM_EXT_PART_FEATURE_ID_AOM_EXT_PART_FEATURE_BEFORE_NONE: AOM_EXT_PART_FEATURE_ID = 0;
pub const AOM_EXT_PART_FEATURE_ID_AOM_EXT_PART_FEATURE_BEFORE_NONE_PART2: AOM_EXT_PART_FEATURE_ID =
    1;
pub const AOM_EXT_PART_FEATURE_ID_AOM_EXT_PART_FEATURE_AFTER_NONE: AOM_EXT_PART_FEATURE_ID = 2;
pub const AOM_EXT_PART_FEATURE_ID_AOM_EXT_PART_FEATURE_AFTER_NONE_PART2: AOM_EXT_PART_FEATURE_ID =
    3;
pub const AOM_EXT_PART_FEATURE_ID_AOM_EXT_PART_FEATURE_AFTER_SPLIT: AOM_EXT_PART_FEATURE_ID = 4;
pub const AOM_EXT_PART_FEATURE_ID_AOM_EXT_PART_FEATURE_AFTER_SPLIT_PART2: AOM_EXT_PART_FEATURE_ID =
    5;
pub const AOM_EXT_PART_FEATURE_ID_AOM_EXT_PART_FEATURE_AFTER_RECT: AOM_EXT_PART_FEATURE_ID = 6;
pub const AOM_EXT_PART_FEATURE_ID_AOM_EXT_PART_FEATURE_AFTER_AB: AOM_EXT_PART_FEATURE_ID = 7;
pub type AOM_EXT_PART_FEATURE_ID = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_sb_tpl_features {
    pub available: ::std::os::raw::c_int,
    pub tpl_unit_length: ::std::os::raw::c_int,
    pub num_units: ::std::os::raw::c_int,
    pub intra_cost: [i64; 64usize],
    pub inter_cost: [i64; 64usize],
    pub mc_dep_cost: [i64; 64usize],
}
pub type aom_sb_tpl_features_t = aom_sb_tpl_features;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_sb_simple_motion_features {
    pub unit_length: ::std::os::raw::c_int,
    pub num_units: ::std::os::raw::c_int,
    pub block_sse: [::std::os::raw::c_int; 64usize],
    pub block_var: [::std::os::raw::c_int; 64usize],
}
pub type aom_sb_simple_motion_features_t = aom_sb_simple_motion_features;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_sb_features {
    pub motion_features: aom_sb_simple_motion_features_t,
    pub tpl_features: aom_sb_tpl_features_t,
}
pub type aom_sb_features_t = aom_sb_features;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_partition_features {
    pub id: AOM_EXT_PART_FEATURE_ID,
    pub before_part_none: aom_partition_features_before_none_t,
    pub after_part_none: aom_partition_features_none_t,
    pub after_part_split: aom_partition_features_split_t,
    pub after_part_rect: aom_partition_features_rect_t,
    pub after_part_ab: aom_partition_features_ab_t,
    pub sb_features: aom_sb_features_t,
    pub mi_row: ::std::os::raw::c_int,
    pub mi_col: ::std::os::raw::c_int,
    pub frame_width: ::std::os::raw::c_int,
    pub frame_height: ::std::os::raw::c_int,
    pub block_size: ::std::os::raw::c_int,
    pub valid_partition_types: ::std::os::raw::c_int,
    pub update_type: ::std::os::raw::c_int,
    pub qindex: ::std::os::raw::c_int,
    pub rdmult: ::std::os::raw::c_int,
    pub pyramid_level: ::std::os::raw::c_int,
    pub has_above_block: ::std::os::raw::c_int,
    pub above_block_width: ::std::os::raw::c_int,
    pub above_block_height: ::std::os::raw::c_int,
    pub has_left_block: ::std::os::raw::c_int,
    pub left_block_width: ::std::os::raw::c_int,
    pub left_block_height: ::std::os::raw::c_int,
    pub block_sse: ::std::os::raw::c_uint,
    pub block_var: ::std::os::raw::c_uint,
    pub sub_block_sse: [::std::os::raw::c_uint; 4usize],
    pub sub_block_var: [::std::os::raw::c_uint; 4usize],
    pub horz_block_sse: [::std::os::raw::c_uint; 2usize],
    pub horz_block_var: [::std::os::raw::c_uint; 2usize],
    pub vert_block_sse: [::std::os::raw::c_uint; 2usize],
    pub vert_block_var: [::std::os::raw::c_uint; 2usize],
    pub tpl_intra_cost: i64,
    pub tpl_inter_cost: i64,
    pub tpl_mc_dep_cost: i64,
}
pub type aom_partition_features_t = aom_partition_features;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_partition_decision {
    pub is_final_decision: ::std::os::raw::c_int,
    pub num_nodes: ::std::os::raw::c_int,
    pub partition_decision: [::std::os::raw::c_int; 2048usize],
    pub current_decision: ::std::os::raw::c_int,
    pub terminate_partition_search: ::std::os::raw::c_int,
    pub partition_none_allowed: ::std::os::raw::c_int,
    pub partition_rect_allowed: [::std::os::raw::c_int; 2usize],
    pub do_rectangular_split: ::std::os::raw::c_int,
    pub do_square_split: ::std::os::raw::c_int,
    pub prune_rect_part: [::std::os::raw::c_int; 2usize],
    pub horza_partition_allowed: ::std::os::raw::c_int,
    pub horzb_partition_allowed: ::std::os::raw::c_int,
    pub verta_partition_allowed: ::std::os::raw::c_int,
    pub vertb_partition_allowed: ::std::os::raw::c_int,
    pub partition_horz4_allowed: ::std::os::raw::c_int,
    pub partition_vert4_allowed: ::std::os::raw::c_int,
}
pub type aom_partition_decision_t = aom_partition_decision;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_partition_stats {
    pub rate: ::std::os::raw::c_int,
    pub dist: i64,
    pub rdcost: i64,
}
pub type aom_partition_stats_t = aom_partition_stats;
pub const aom_ext_part_status_AOM_EXT_PART_OK: aom_ext_part_status = 0;
pub const aom_ext_part_status_AOM_EXT_PART_ERROR: aom_ext_part_status = 1;
pub const aom_ext_part_status_AOM_EXT_PART_TEST: aom_ext_part_status = 2;
pub type aom_ext_part_status = ::std::os::raw::c_uint;
pub use self::aom_ext_part_status as aom_ext_part_status_t;
pub type aom_ext_part_create_model_fn_t = ::std::option::Option<
    unsafe extern "C" fn(
        priv_: *mut ::std::os::raw::c_void,
        part_config: *const aom_ext_part_config_t,
        ext_part_model: *mut aom_ext_part_model_t,
    ) -> aom_ext_part_status_t,
>;
pub type aom_ext_part_send_features_fn_t = ::std::option::Option<
    unsafe extern "C" fn(
        ext_part_model: aom_ext_part_model_t,
        part_features: *const aom_partition_features_t,
    ) -> aom_ext_part_status_t,
>;
pub type aom_ext_part_get_decision_fn_t = ::std::option::Option<
    unsafe extern "C" fn(
        ext_part_model: aom_ext_part_model_t,
        ext_part_decision: *mut aom_partition_decision_t,
    ) -> aom_ext_part_status_t,
>;
pub type aom_ext_part_send_partition_stats_fn_t = ::std::option::Option<
    unsafe extern "C" fn(
        ext_part_model: aom_ext_part_model_t,
        ext_part_stats: *const aom_partition_stats_t,
    ) -> aom_ext_part_status_t,
>;
pub type aom_ext_part_delete_model_fn_t = ::std::option::Option<
    unsafe extern "C" fn(ext_part_model: aom_ext_part_model_t) -> aom_ext_part_status_t,
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_ext_part_funcs {
    pub create_model: aom_ext_part_create_model_fn_t,
    pub send_features: aom_ext_part_send_features_fn_t,
    pub get_partition_decision: aom_ext_part_get_decision_fn_t,
    pub send_partition_stats: aom_ext_part_send_partition_stats_fn_t,
    pub delete_model: aom_ext_part_delete_model_fn_t,
    pub decision_mode: aom_ext_part_decision_mode_t,
    pub priv_: *mut ::std::os::raw::c_void,
}
pub type aom_ext_part_funcs_t = aom_ext_part_funcs;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_fixed_buf {
    pub buf: *mut ::std::os::raw::c_void,
    pub sz: usize,
}
pub type aom_fixed_buf_t = aom_fixed_buf;
pub type aom_codec_er_flags_t = u32;
pub const aom_codec_cx_pkt_kind_AOM_CODEC_CX_FRAME_PKT: aom_codec_cx_pkt_kind = 0;
pub const aom_codec_cx_pkt_kind_AOM_CODEC_STATS_PKT: aom_codec_cx_pkt_kind = 1;
pub const aom_codec_cx_pkt_kind_AOM_CODEC_FPMB_STATS_PKT: aom_codec_cx_pkt_kind = 2;
pub const aom_codec_cx_pkt_kind_AOM_CODEC_PSNR_PKT: aom_codec_cx_pkt_kind = 3;
pub const aom_codec_cx_pkt_kind_AOM_CODEC_CUSTOM_PKT: aom_codec_cx_pkt_kind = 256;
pub type aom_codec_cx_pkt_kind = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct aom_codec_cx_pkt {
    pub kind: aom_codec_cx_pkt_kind,
    pub data: aom_codec_cx_pkt__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union aom_codec_cx_pkt__bindgen_ty_1 {
    pub frame: aom_codec_cx_pkt__bindgen_ty_1__bindgen_ty_1,
    pub twopass_stats: aom_fixed_buf_t,
    pub firstpass_mb_stats: aom_fixed_buf_t,
    pub psnr: aom_codec_cx_pkt__bindgen_ty_1_aom_psnr_pkt,
    pub raw: aom_fixed_buf_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_codec_cx_pkt__bindgen_ty_1__bindgen_ty_1 {
    pub buf: *mut ::std::os::raw::c_void,
    pub sz: usize,
    pub pts: aom_codec_pts_t,
    pub duration: ::std::os::raw::c_ulong,
    pub flags: aom_codec_frame_flags_t,
    pub partition_id: ::std::os::raw::c_int,
    pub vis_frame_size: usize,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_codec_cx_pkt__bindgen_ty_1_aom_psnr_pkt {
    pub samples: [::std::os::raw::c_uint; 4usize],
    pub sse: [u64; 4usize],
    pub psnr: [f64; 4usize],
    pub samples_hbd: [::std::os::raw::c_uint; 4usize],
    pub sse_hbd: [u64; 4usize],
    pub psnr_hbd: [f64; 4usize],
}
pub type aom_codec_cx_pkt_t = aom_codec_cx_pkt;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_rational {
    pub num: ::std::os::raw::c_int,
    pub den: ::std::os::raw::c_int,
}
pub type aom_rational_t = aom_rational;
pub const aom_enc_pass_AOM_RC_ONE_PASS: aom_enc_pass = 0;
pub const aom_enc_pass_AOM_RC_FIRST_PASS: aom_enc_pass = 1;
pub const aom_enc_pass_AOM_RC_SECOND_PASS: aom_enc_pass = 2;
pub const aom_enc_pass_AOM_RC_THIRD_PASS: aom_enc_pass = 3;
pub const aom_enc_pass_AOM_RC_LAST_PASS: aom_enc_pass = 2;
pub type aom_enc_pass = ::std::os::raw::c_uint;
pub const aom_rc_mode_AOM_VBR: aom_rc_mode = 0;
pub const aom_rc_mode_AOM_CBR: aom_rc_mode = 1;
pub const aom_rc_mode_AOM_CQ: aom_rc_mode = 2;
pub const aom_rc_mode_AOM_Q: aom_rc_mode = 3;
pub type aom_rc_mode = ::std::os::raw::c_uint;
pub const aom_kf_mode_AOM_KF_FIXED: aom_kf_mode = 0;
pub const aom_kf_mode_AOM_KF_AUTO: aom_kf_mode = 1;
pub const aom_kf_mode_AOM_KF_DISABLED: aom_kf_mode = 0;
pub type aom_kf_mode = ::std::os::raw::c_uint;
pub const aom_superres_mode_AOM_SUPERRES_NONE: aom_superres_mode = 0;
pub const aom_superres_mode_AOM_SUPERRES_FIXED: aom_superres_mode = 1;
pub const aom_superres_mode_AOM_SUPERRES_RANDOM: aom_superres_mode = 2;
pub const aom_superres_mode_AOM_SUPERRES_QTHRESH: aom_superres_mode = 3;
pub const aom_superres_mode_AOM_SUPERRES_AUTO: aom_superres_mode = 4;
pub type aom_superres_mode = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct cfg_options {
    pub init_by_cfg_file: ::std::os::raw::c_uint,
    pub super_block_size: ::std::os::raw::c_uint,
    pub max_partition_size: ::std::os::raw::c_uint,
    pub min_partition_size: ::std::os::raw::c_uint,
    pub disable_ab_partition_type: ::std::os::raw::c_uint,
    pub disable_rect_partition_type: ::std::os::raw::c_uint,
    pub disable_1to4_partition_type: ::std::os::raw::c_uint,
    pub disable_flip_idtx: ::std::os::raw::c_uint,
    pub disable_cdef: ::std::os::raw::c_uint,
    pub disable_lr: ::std::os::raw::c_uint,
    pub disable_obmc: ::std::os::raw::c_uint,
    pub disable_warp_motion: ::std::os::raw::c_uint,
    pub disable_global_motion: ::std::os::raw::c_uint,
    pub disable_dist_wtd_comp: ::std::os::raw::c_uint,
    pub disable_diff_wtd_comp: ::std::os::raw::c_uint,
    pub disable_inter_intra_comp: ::std::os::raw::c_uint,
    pub disable_masked_comp: ::std::os::raw::c_uint,
    pub disable_one_sided_comp: ::std::os::raw::c_uint,
    pub disable_palette: ::std::os::raw::c_uint,
    pub disable_intrabc: ::std::os::raw::c_uint,
    pub disable_cfl: ::std::os::raw::c_uint,
    pub disable_smooth_intra: ::std::os::raw::c_uint,
    pub disable_filter_intra: ::std::os::raw::c_uint,
    pub disable_dual_filter: ::std::os::raw::c_uint,
    pub disable_intra_angle_delta: ::std::os::raw::c_uint,
    pub disable_intra_edge_filter: ::std::os::raw::c_uint,
    pub disable_tx_64x64: ::std::os::raw::c_uint,
    pub disable_smooth_inter_intra: ::std::os::raw::c_uint,
    pub disable_inter_inter_wedge: ::std::os::raw::c_uint,
    pub disable_inter_intra_wedge: ::std::os::raw::c_uint,
    pub disable_paeth_intra: ::std::os::raw::c_uint,
    pub disable_trellis_quant: ::std::os::raw::c_uint,
    pub disable_ref_frame_mv: ::std::os::raw::c_uint,
    pub reduced_reference_set: ::std::os::raw::c_uint,
    pub reduced_tx_type_set: ::std::os::raw::c_uint,
}
pub type cfg_options_t = cfg_options;
pub type aom_enc_frame_flags_t = ::std::os::raw::c_long;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_codec_enc_cfg {
    pub g_usage: ::std::os::raw::c_uint,
    pub g_threads: ::std::os::raw::c_uint,
    pub g_profile: ::std::os::raw::c_uint,
    pub g_w: ::std::os::raw::c_uint,
    pub g_h: ::std::os::raw::c_uint,
    pub g_limit: ::std::os::raw::c_uint,
    pub g_forced_max_frame_width: ::std::os::raw::c_uint,
    pub g_forced_max_frame_height: ::std::os::raw::c_uint,
    pub g_bit_depth: aom_bit_depth_t,
    pub g_input_bit_depth: ::std::os::raw::c_uint,
    pub g_timebase: aom_rational,
    pub g_error_resilient: aom_codec_er_flags_t,
    pub g_pass: aom_enc_pass,
    pub g_lag_in_frames: ::std::os::raw::c_uint,
    pub rc_dropframe_thresh: ::std::os::raw::c_uint,
    pub rc_resize_mode: ::std::os::raw::c_uint,
    pub rc_resize_denominator: ::std::os::raw::c_uint,
    pub rc_resize_kf_denominator: ::std::os::raw::c_uint,
    pub rc_superres_mode: aom_superres_mode,
    pub rc_superres_denominator: ::std::os::raw::c_uint,
    pub rc_superres_kf_denominator: ::std::os::raw::c_uint,
    pub rc_superres_qthresh: ::std::os::raw::c_uint,
    pub rc_superres_kf_qthresh: ::std::os::raw::c_uint,
    pub rc_end_usage: aom_rc_mode,
    pub rc_twopass_stats_in: aom_fixed_buf_t,
    pub rc_firstpass_mb_stats_in: aom_fixed_buf_t,
    pub rc_target_bitrate: ::std::os::raw::c_uint,
    pub rc_min_quantizer: ::std::os::raw::c_uint,
    pub rc_max_quantizer: ::std::os::raw::c_uint,
    pub rc_undershoot_pct: ::std::os::raw::c_uint,
    pub rc_overshoot_pct: ::std::os::raw::c_uint,
    pub rc_buf_sz: ::std::os::raw::c_uint,
    pub rc_buf_initial_sz: ::std::os::raw::c_uint,
    pub rc_buf_optimal_sz: ::std::os::raw::c_uint,
    pub rc_2pass_vbr_bias_pct: ::std::os::raw::c_uint,
    pub rc_2pass_vbr_minsection_pct: ::std::os::raw::c_uint,
    pub rc_2pass_vbr_maxsection_pct: ::std::os::raw::c_uint,
    pub fwd_kf_enabled: ::std::os::raw::c_int,
    pub kf_mode: aom_kf_mode,
    pub kf_min_dist: ::std::os::raw::c_uint,
    pub kf_max_dist: ::std::os::raw::c_uint,
    pub sframe_dist: ::std::os::raw::c_uint,
    pub sframe_mode: ::std::os::raw::c_uint,
    pub large_scale_tile: ::std::os::raw::c_uint,
    pub monochrome: ::std::os::raw::c_uint,
    pub full_still_picture_hdr: ::std::os::raw::c_uint,
    pub save_as_annexb: ::std::os::raw::c_uint,
    pub tile_width_count: ::std::os::raw::c_int,
    pub tile_height_count: ::std::os::raw::c_int,
    pub tile_widths: [::std::os::raw::c_int; 64usize],
    pub tile_heights: [::std::os::raw::c_int; 64usize],
    pub use_fixed_qp_offsets: ::std::os::raw::c_uint,
    pub fixed_qp_offsets: [::std::os::raw::c_int; 5usize],
    pub encoder_cfg: cfg_options_t,
}
pub type aom_codec_enc_cfg_t = aom_codec_enc_cfg;
extern "C" {
    pub fn aom_codec_enc_init_ver(
        ctx: *mut aom_codec_ctx_t,
        iface: *const aom_codec_iface,
        cfg: *const aom_codec_enc_cfg_t,
        flags: aom_codec_flags_t,
        ver: ::std::os::raw::c_int,
    ) -> aom_codec_err_t;
}
extern "C" {
    pub fn aom_codec_enc_config_default(
        iface: *const aom_codec_iface,
        cfg: *mut aom_codec_enc_cfg_t,
        usage: ::std::os::raw::c_uint,
    ) -> aom_codec_err_t;
}
extern "C" {
    pub fn aom_codec_enc_config_set(
        ctx: *mut aom_codec_ctx_t,
        cfg: *const aom_codec_enc_cfg_t,
    ) -> aom_codec_err_t;
}
extern "C" {
    pub fn aom_codec_get_global_headers(ctx: *mut aom_codec_ctx_t) -> *mut aom_fixed_buf_t;
}
extern "C" {
    pub fn aom_codec_encode(
        ctx: *mut aom_codec_ctx_t,
        img: *const aom_image_t,
        pts: aom_codec_pts_t,
        duration: ::std::os::raw::c_ulong,
        flags: aom_enc_frame_flags_t,
    ) -> aom_codec_err_t;
}
extern "C" {
    pub fn aom_codec_set_cx_data_buf(
        ctx: *mut aom_codec_ctx_t,
        buf: *const aom_fixed_buf_t,
        pad_before: ::std::os::raw::c_uint,
        pad_after: ::std::os::raw::c_uint,
    ) -> aom_codec_err_t;
}
extern "C" {
    pub fn aom_codec_get_cx_data(
        ctx: *mut aom_codec_ctx_t,
        iter: *mut aom_codec_iter_t,
    ) -> *const aom_codec_cx_pkt_t;
}
extern "C" {
    pub fn aom_codec_get_preview_frame(ctx: *mut aom_codec_ctx_t) -> *const aom_image_t;
}
pub const aom_com_control_id_AV1_GET_REFERENCE: aom_com_control_id = 230;
pub const aom_com_control_id_AV1_SET_REFERENCE: aom_com_control_id = 231;
pub const aom_com_control_id_AV1_COPY_REFERENCE: aom_com_control_id = 232;
pub const aom_com_control_id_AV1_GET_NEW_FRAME_IMAGE: aom_com_control_id = 233;
pub const aom_com_control_id_AV1_COPY_NEW_FRAME_IMAGE: aom_com_control_id = 234;
pub const aom_com_control_id_AOM_DECODER_CTRL_ID_START: aom_com_control_id = 256;
pub type aom_com_control_id = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct av1_ref_frame {
    pub idx: ::std::os::raw::c_int,
    pub use_external_ref: ::std::os::raw::c_int,
    pub img: aom_image_t,
}
pub type av1_ref_frame_t = av1_ref_frame;
pub type aom_codec_control_type_AV1_GET_REFERENCE = *mut av1_ref_frame_t;
pub type aom_codec_control_type_AV1_SET_REFERENCE = *mut av1_ref_frame_t;
pub type aom_codec_control_type_AV1_COPY_REFERENCE = *mut av1_ref_frame_t;
pub type aom_codec_control_type_AV1_GET_NEW_FRAME_IMAGE = *mut aom_image_t;
pub type aom_codec_control_type_AV1_COPY_NEW_FRAME_IMAGE = *mut aom_image_t;
extern "C" {
    pub static mut aom_codec_av1_cx_algo: aom_codec_iface_t;
}
extern "C" {
    pub fn aom_codec_av1_cx() -> *const aom_codec_iface;
}
pub const aome_enc_control_id_AOME_USE_REFERENCE: aome_enc_control_id = 7;
pub const aome_enc_control_id_AOME_SET_ROI_MAP: aome_enc_control_id = 8;
pub const aome_enc_control_id_AOME_SET_ACTIVEMAP: aome_enc_control_id = 9;
pub const aome_enc_control_id_AOME_SET_SCALEMODE: aome_enc_control_id = 11;
pub const aome_enc_control_id_AOME_SET_SPATIAL_LAYER_ID: aome_enc_control_id = 12;
pub const aome_enc_control_id_AOME_SET_CPUUSED: aome_enc_control_id = 13;
pub const aome_enc_control_id_AOME_SET_ENABLEAUTOALTREF: aome_enc_control_id = 14;
pub const aome_enc_control_id_AOME_SET_SHARPNESS: aome_enc_control_id = 16;
pub const aome_enc_control_id_AOME_SET_STATIC_THRESHOLD: aome_enc_control_id = 17;
pub const aome_enc_control_id_AOME_GET_LAST_QUANTIZER: aome_enc_control_id = 19;
pub const aome_enc_control_id_AOME_GET_LAST_QUANTIZER_64: aome_enc_control_id = 20;
pub const aome_enc_control_id_AOME_SET_ARNR_MAXFRAMES: aome_enc_control_id = 21;
pub const aome_enc_control_id_AOME_SET_ARNR_STRENGTH: aome_enc_control_id = 22;
pub const aome_enc_control_id_AOME_SET_TUNING: aome_enc_control_id = 24;
pub const aome_enc_control_id_AOME_SET_CQ_LEVEL: aome_enc_control_id = 25;
pub const aome_enc_control_id_AOME_SET_MAX_INTRA_BITRATE_PCT: aome_enc_control_id = 26;
pub const aome_enc_control_id_AOME_SET_NUMBER_SPATIAL_LAYERS: aome_enc_control_id = 27;
pub const aome_enc_control_id_AV1E_SET_MAX_INTER_BITRATE_PCT: aome_enc_control_id = 28;
pub const aome_enc_control_id_AV1E_SET_GF_CBR_BOOST_PCT: aome_enc_control_id = 29;
pub const aome_enc_control_id_AV1E_SET_LOSSLESS: aome_enc_control_id = 31;
pub const aome_enc_control_id_AV1E_SET_ROW_MT: aome_enc_control_id = 32;
pub const aome_enc_control_id_AV1E_SET_TILE_COLUMNS: aome_enc_control_id = 33;
pub const aome_enc_control_id_AV1E_SET_TILE_ROWS: aome_enc_control_id = 34;
pub const aome_enc_control_id_AV1E_SET_ENABLE_TPL_MODEL: aome_enc_control_id = 35;
pub const aome_enc_control_id_AV1E_SET_ENABLE_KEYFRAME_FILTERING: aome_enc_control_id = 36;
pub const aome_enc_control_id_AV1E_SET_FRAME_PARALLEL_DECODING: aome_enc_control_id = 37;
pub const aome_enc_control_id_AV1E_SET_ERROR_RESILIENT_MODE: aome_enc_control_id = 38;
pub const aome_enc_control_id_AV1E_SET_S_FRAME_MODE: aome_enc_control_id = 39;
pub const aome_enc_control_id_AV1E_SET_AQ_MODE: aome_enc_control_id = 40;
pub const aome_enc_control_id_AV1E_SET_FRAME_PERIODIC_BOOST: aome_enc_control_id = 41;
pub const aome_enc_control_id_AV1E_SET_NOISE_SENSITIVITY: aome_enc_control_id = 42;
pub const aome_enc_control_id_AV1E_SET_TUNE_CONTENT: aome_enc_control_id = 43;
pub const aome_enc_control_id_AV1E_SET_CDF_UPDATE_MODE: aome_enc_control_id = 44;
pub const aome_enc_control_id_AV1E_SET_COLOR_PRIMARIES: aome_enc_control_id = 45;
pub const aome_enc_control_id_AV1E_SET_TRANSFER_CHARACTERISTICS: aome_enc_control_id = 46;
pub const aome_enc_control_id_AV1E_SET_MATRIX_COEFFICIENTS: aome_enc_control_id = 47;
pub const aome_enc_control_id_AV1E_SET_CHROMA_SAMPLE_POSITION: aome_enc_control_id = 48;
pub const aome_enc_control_id_AV1E_SET_MIN_GF_INTERVAL: aome_enc_control_id = 49;
pub const aome_enc_control_id_AV1E_SET_MAX_GF_INTERVAL: aome_enc_control_id = 50;
pub const aome_enc_control_id_AV1E_GET_ACTIVEMAP: aome_enc_control_id = 51;
pub const aome_enc_control_id_AV1E_SET_COLOR_RANGE: aome_enc_control_id = 52;
pub const aome_enc_control_id_AV1E_SET_RENDER_SIZE: aome_enc_control_id = 53;
pub const aome_enc_control_id_AV1E_SET_TARGET_SEQ_LEVEL_IDX: aome_enc_control_id = 54;
pub const aome_enc_control_id_AV1E_GET_SEQ_LEVEL_IDX: aome_enc_control_id = 55;
pub const aome_enc_control_id_AV1E_SET_SUPERBLOCK_SIZE: aome_enc_control_id = 56;
pub const aome_enc_control_id_AOME_SET_ENABLEAUTOBWDREF: aome_enc_control_id = 57;
pub const aome_enc_control_id_AV1E_SET_ENABLE_CDEF: aome_enc_control_id = 58;
pub const aome_enc_control_id_AV1E_SET_ENABLE_RESTORATION: aome_enc_control_id = 59;
pub const aome_enc_control_id_AV1E_SET_FORCE_VIDEO_MODE: aome_enc_control_id = 60;
pub const aome_enc_control_id_AV1E_SET_ENABLE_OBMC: aome_enc_control_id = 61;
pub const aome_enc_control_id_AV1E_SET_DISABLE_TRELLIS_QUANT: aome_enc_control_id = 62;
pub const aome_enc_control_id_AV1E_SET_ENABLE_QM: aome_enc_control_id = 63;
pub const aome_enc_control_id_AV1E_SET_QM_MIN: aome_enc_control_id = 64;
pub const aome_enc_control_id_AV1E_SET_QM_MAX: aome_enc_control_id = 65;
pub const aome_enc_control_id_AV1E_SET_QM_Y: aome_enc_control_id = 66;
pub const aome_enc_control_id_AV1E_SET_QM_U: aome_enc_control_id = 67;
pub const aome_enc_control_id_AV1E_SET_QM_V: aome_enc_control_id = 68;
pub const aome_enc_control_id_AV1E_SET_NUM_TG: aome_enc_control_id = 70;
pub const aome_enc_control_id_AV1E_SET_MTU: aome_enc_control_id = 71;
pub const aome_enc_control_id_AV1E_SET_ENABLE_RECT_PARTITIONS: aome_enc_control_id = 73;
pub const aome_enc_control_id_AV1E_SET_ENABLE_AB_PARTITIONS: aome_enc_control_id = 74;
pub const aome_enc_control_id_AV1E_SET_ENABLE_1TO4_PARTITIONS: aome_enc_control_id = 75;
pub const aome_enc_control_id_AV1E_SET_MIN_PARTITION_SIZE: aome_enc_control_id = 76;
pub const aome_enc_control_id_AV1E_SET_MAX_PARTITION_SIZE: aome_enc_control_id = 77;
pub const aome_enc_control_id_AV1E_SET_ENABLE_INTRA_EDGE_FILTER: aome_enc_control_id = 78;
pub const aome_enc_control_id_AV1E_SET_ENABLE_ORDER_HINT: aome_enc_control_id = 79;
pub const aome_enc_control_id_AV1E_SET_ENABLE_TX64: aome_enc_control_id = 80;
pub const aome_enc_control_id_AV1E_SET_ENABLE_FLIP_IDTX: aome_enc_control_id = 81;
pub const aome_enc_control_id_AV1E_SET_ENABLE_RECT_TX: aome_enc_control_id = 82;
pub const aome_enc_control_id_AV1E_SET_ENABLE_DIST_WTD_COMP: aome_enc_control_id = 83;
pub const aome_enc_control_id_AV1E_SET_ENABLE_REF_FRAME_MVS: aome_enc_control_id = 84;
pub const aome_enc_control_id_AV1E_SET_ALLOW_REF_FRAME_MVS: aome_enc_control_id = 85;
pub const aome_enc_control_id_AV1E_SET_ENABLE_DUAL_FILTER: aome_enc_control_id = 86;
pub const aome_enc_control_id_AV1E_SET_ENABLE_CHROMA_DELTAQ: aome_enc_control_id = 87;
pub const aome_enc_control_id_AV1E_SET_ENABLE_MASKED_COMP: aome_enc_control_id = 88;
pub const aome_enc_control_id_AV1E_SET_ENABLE_ONESIDED_COMP: aome_enc_control_id = 89;
pub const aome_enc_control_id_AV1E_SET_ENABLE_INTERINTRA_COMP: aome_enc_control_id = 90;
pub const aome_enc_control_id_AV1E_SET_ENABLE_SMOOTH_INTERINTRA: aome_enc_control_id = 91;
pub const aome_enc_control_id_AV1E_SET_ENABLE_DIFF_WTD_COMP: aome_enc_control_id = 92;
pub const aome_enc_control_id_AV1E_SET_ENABLE_INTERINTER_WEDGE: aome_enc_control_id = 93;
pub const aome_enc_control_id_AV1E_SET_ENABLE_INTERINTRA_WEDGE: aome_enc_control_id = 94;
pub const aome_enc_control_id_AV1E_SET_ENABLE_GLOBAL_MOTION: aome_enc_control_id = 95;
pub const aome_enc_control_id_AV1E_SET_ENABLE_WARPED_MOTION: aome_enc_control_id = 96;
pub const aome_enc_control_id_AV1E_SET_ALLOW_WARPED_MOTION: aome_enc_control_id = 97;
pub const aome_enc_control_id_AV1E_SET_ENABLE_FILTER_INTRA: aome_enc_control_id = 98;
pub const aome_enc_control_id_AV1E_SET_ENABLE_SMOOTH_INTRA: aome_enc_control_id = 99;
pub const aome_enc_control_id_AV1E_SET_ENABLE_PAETH_INTRA: aome_enc_control_id = 100;
pub const aome_enc_control_id_AV1E_SET_ENABLE_CFL_INTRA: aome_enc_control_id = 101;
pub const aome_enc_control_id_AV1E_SET_ENABLE_SUPERRES: aome_enc_control_id = 102;
pub const aome_enc_control_id_AV1E_SET_ENABLE_OVERLAY: aome_enc_control_id = 103;
pub const aome_enc_control_id_AV1E_SET_ENABLE_PALETTE: aome_enc_control_id = 104;
pub const aome_enc_control_id_AV1E_SET_ENABLE_INTRABC: aome_enc_control_id = 105;
pub const aome_enc_control_id_AV1E_SET_ENABLE_ANGLE_DELTA: aome_enc_control_id = 106;
pub const aome_enc_control_id_AV1E_SET_DELTAQ_MODE: aome_enc_control_id = 107;
pub const aome_enc_control_id_AV1E_SET_DELTALF_MODE: aome_enc_control_id = 108;
pub const aome_enc_control_id_AV1E_SET_SINGLE_TILE_DECODING: aome_enc_control_id = 109;
pub const aome_enc_control_id_AV1E_ENABLE_MOTION_VECTOR_UNIT_TEST: aome_enc_control_id = 110;
pub const aome_enc_control_id_AV1E_SET_TIMING_INFO_TYPE: aome_enc_control_id = 111;
pub const aome_enc_control_id_AV1E_SET_FILM_GRAIN_TEST_VECTOR: aome_enc_control_id = 112;
pub const aome_enc_control_id_AV1E_SET_FILM_GRAIN_TABLE: aome_enc_control_id = 113;
pub const aome_enc_control_id_AV1E_SET_DENOISE_NOISE_LEVEL: aome_enc_control_id = 114;
pub const aome_enc_control_id_AV1E_SET_DENOISE_BLOCK_SIZE: aome_enc_control_id = 115;
pub const aome_enc_control_id_AV1E_SET_CHROMA_SUBSAMPLING_X: aome_enc_control_id = 116;
pub const aome_enc_control_id_AV1E_SET_CHROMA_SUBSAMPLING_Y: aome_enc_control_id = 117;
pub const aome_enc_control_id_AV1E_SET_REDUCED_TX_TYPE_SET: aome_enc_control_id = 118;
pub const aome_enc_control_id_AV1E_SET_INTRA_DCT_ONLY: aome_enc_control_id = 119;
pub const aome_enc_control_id_AV1E_SET_INTER_DCT_ONLY: aome_enc_control_id = 120;
pub const aome_enc_control_id_AV1E_SET_INTRA_DEFAULT_TX_ONLY: aome_enc_control_id = 121;
pub const aome_enc_control_id_AV1E_SET_QUANT_B_ADAPT: aome_enc_control_id = 122;
pub const aome_enc_control_id_AV1E_SET_GF_MAX_PYRAMID_HEIGHT: aome_enc_control_id = 123;
pub const aome_enc_control_id_AV1E_SET_MAX_REFERENCE_FRAMES: aome_enc_control_id = 124;
pub const aome_enc_control_id_AV1E_SET_REDUCED_REFERENCE_SET: aome_enc_control_id = 125;
pub const aome_enc_control_id_AV1E_SET_COEFF_COST_UPD_FREQ: aome_enc_control_id = 126;
pub const aome_enc_control_id_AV1E_SET_MODE_COST_UPD_FREQ: aome_enc_control_id = 127;
pub const aome_enc_control_id_AV1E_SET_MV_COST_UPD_FREQ: aome_enc_control_id = 128;
pub const aome_enc_control_id_AV1E_SET_TIER_MASK: aome_enc_control_id = 129;
pub const aome_enc_control_id_AV1E_SET_MIN_CR: aome_enc_control_id = 130;
pub const aome_enc_control_id_AV1E_SET_SVC_LAYER_ID: aome_enc_control_id = 131;
pub const aome_enc_control_id_AV1E_SET_SVC_PARAMS: aome_enc_control_id = 132;
pub const aome_enc_control_id_AV1E_SET_SVC_REF_FRAME_CONFIG: aome_enc_control_id = 133;
pub const aome_enc_control_id_AV1E_SET_VMAF_MODEL_PATH: aome_enc_control_id = 134;
pub const aome_enc_control_id_AV1E_ENABLE_EXT_TILE_DEBUG: aome_enc_control_id = 135;
pub const aome_enc_control_id_AV1E_ENABLE_SB_MULTIPASS_UNIT_TEST: aome_enc_control_id = 136;
pub const aome_enc_control_id_AV1E_SET_GF_MIN_PYRAMID_HEIGHT: aome_enc_control_id = 137;
pub const aome_enc_control_id_AV1E_SET_VBR_CORPUS_COMPLEXITY_LAP: aome_enc_control_id = 138;
pub const aome_enc_control_id_AV1E_GET_BASELINE_GF_INTERVAL: aome_enc_control_id = 139;
pub const aome_enc_control_id_AV1E_SET_ENABLE_DNL_DENOISING: aome_enc_control_id = 140;
pub const aome_enc_control_id_AV1E_SET_ENABLE_DIAGONAL_INTRA: aome_enc_control_id = 141;
pub const aome_enc_control_id_AV1E_SET_DV_COST_UPD_FREQ: aome_enc_control_id = 142;
pub const aome_enc_control_id_AV1E_SET_PARTITION_INFO_PATH: aome_enc_control_id = 143;
pub const aome_enc_control_id_AV1E_SET_EXTERNAL_PARTITION: aome_enc_control_id = 144;
pub const aome_enc_control_id_AV1E_SET_ENABLE_DIRECTIONAL_INTRA: aome_enc_control_id = 145;
pub const aome_enc_control_id_AV1E_SET_ENABLE_TX_SIZE_SEARCH: aome_enc_control_id = 146;
pub const aome_enc_control_id_AV1E_SET_SVC_REF_FRAME_COMP_PRED: aome_enc_control_id = 147;
pub const aome_enc_control_id_AV1E_SET_DELTAQ_STRENGTH: aome_enc_control_id = 148;
pub const aome_enc_control_id_AV1E_SET_LOOPFILTER_CONTROL: aome_enc_control_id = 149;
pub const aome_enc_control_id_AOME_GET_LOOPFILTER_LEVEL: aome_enc_control_id = 150;
pub const aome_enc_control_id_AV1E_SET_AUTO_INTRA_TOOLS_OFF: aome_enc_control_id = 151;
pub const aome_enc_control_id_AV1E_SET_RTC_EXTERNAL_RC: aome_enc_control_id = 152;
pub const aome_enc_control_id_AV1E_SET_FP_MT: aome_enc_control_id = 153;
pub const aome_enc_control_id_AV1E_SET_FP_MT_UNIT_TEST: aome_enc_control_id = 154;
pub const aome_enc_control_id_AV1E_GET_TARGET_SEQ_LEVEL_IDX: aome_enc_control_id = 155;
pub const aome_enc_control_id_AV1E_GET_NUM_OPERATING_POINTS: aome_enc_control_id = 156;
pub const aome_enc_control_id_AV1E_SET_SKIP_POSTPROC_FILTERING: aome_enc_control_id = 157;
pub const aome_enc_control_id_AV1E_ENABLE_SB_QP_SWEEP: aome_enc_control_id = 158;
pub const aome_enc_control_id_AV1E_SET_QUANTIZER_ONE_PASS: aome_enc_control_id = 159;
pub const aome_enc_control_id_AV1E_ENABLE_RATE_GUIDE_DELTAQ: aome_enc_control_id = 160;
pub const aome_enc_control_id_AV1E_SET_RATE_DISTRIBUTION_INFO: aome_enc_control_id = 161;
pub const aome_enc_control_id_AV1E_GET_LUMA_CDEF_STRENGTH: aome_enc_control_id = 162;
pub const aome_enc_control_id_AV1E_SET_BITRATE_ONE_PASS_CBR: aome_enc_control_id = 163;
pub const aome_enc_control_id_AV1E_SET_MAX_CONSEC_FRAME_DROP_CBR: aome_enc_control_id = 164;
pub const aome_enc_control_id_AV1E_SET_SVC_FRAME_DROP_MODE: aome_enc_control_id = 165;
pub const aome_enc_control_id_AV1E_SET_AUTO_TILES: aome_enc_control_id = 166;
pub const aome_enc_control_id_AV1E_GET_HIGH_MOTION_CONTENT_SCREEN_RTC: aome_enc_control_id = 167;
pub const aome_enc_control_id_AV1E_SET_POSTENCODE_DROP_RTC: aome_enc_control_id = 168;
pub const aome_enc_control_id_AV1E_SET_MAX_CONSEC_FRAME_DROP_MS_CBR: aome_enc_control_id = 169;
pub type aome_enc_control_id = ::std::os::raw::c_uint;
pub const aom_scaling_mode_1d_AOME_NORMAL: aom_scaling_mode_1d = 0;
pub const aom_scaling_mode_1d_AOME_FOURFIVE: aom_scaling_mode_1d = 1;
pub const aom_scaling_mode_1d_AOME_THREEFIVE: aom_scaling_mode_1d = 2;
pub const aom_scaling_mode_1d_AOME_THREEFOUR: aom_scaling_mode_1d = 3;
pub const aom_scaling_mode_1d_AOME_ONEFOUR: aom_scaling_mode_1d = 4;
pub const aom_scaling_mode_1d_AOME_ONEEIGHT: aom_scaling_mode_1d = 5;
pub const aom_scaling_mode_1d_AOME_ONETWO: aom_scaling_mode_1d = 6;
pub const aom_scaling_mode_1d_AOME_TWOTHREE: aom_scaling_mode_1d = 7;
pub const aom_scaling_mode_1d_AOME_ONETHREE: aom_scaling_mode_1d = 8;
pub type aom_scaling_mode_1d = ::std::os::raw::c_uint;
pub use self::aom_scaling_mode_1d as AOM_SCALING_MODE;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_roi_map {
    pub roi_map: *mut ::std::os::raw::c_uchar,
    pub rows: ::std::os::raw::c_uint,
    pub cols: ::std::os::raw::c_uint,
    pub delta_q: [::std::os::raw::c_int; 8usize],
    pub delta_lf: [::std::os::raw::c_int; 8usize],
    pub static_threshold: [::std::os::raw::c_uint; 8usize],
}
pub type aom_roi_map_t = aom_roi_map;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_active_map {
    pub active_map: *mut ::std::os::raw::c_uchar,
    pub rows: ::std::os::raw::c_uint,
    pub cols: ::std::os::raw::c_uint,
}
pub type aom_active_map_t = aom_active_map;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_scaling_mode {
    pub h_scaling_mode: AOM_SCALING_MODE,
    pub v_scaling_mode: AOM_SCALING_MODE,
}
pub type aom_scaling_mode_t = aom_scaling_mode;
pub const aom_tune_content_AOM_CONTENT_DEFAULT: aom_tune_content = 0;
pub const aom_tune_content_AOM_CONTENT_SCREEN: aom_tune_content = 1;
pub const aom_tune_content_AOM_CONTENT_FILM: aom_tune_content = 2;
pub const aom_tune_content_AOM_CONTENT_INVALID: aom_tune_content = 3;
pub type aom_tune_content = ::std::os::raw::c_uint;
pub const aom_timing_info_type_t_AOM_TIMING_UNSPECIFIED: aom_timing_info_type_t = 0;
pub const aom_timing_info_type_t_AOM_TIMING_EQUAL: aom_timing_info_type_t = 1;
pub const aom_timing_info_type_t_AOM_TIMING_DEC_MODEL: aom_timing_info_type_t = 2;
pub type aom_timing_info_type_t = ::std::os::raw::c_uint;
pub const aom_tune_metric_AOM_TUNE_PSNR: aom_tune_metric = 0;
pub const aom_tune_metric_AOM_TUNE_SSIM: aom_tune_metric = 1;
pub const aom_tune_metric_AOM_TUNE_VMAF_WITH_PREPROCESSING: aom_tune_metric = 4;
pub const aom_tune_metric_AOM_TUNE_VMAF_WITHOUT_PREPROCESSING: aom_tune_metric = 5;
pub const aom_tune_metric_AOM_TUNE_VMAF_MAX_GAIN: aom_tune_metric = 6;
pub const aom_tune_metric_AOM_TUNE_VMAF_NEG_MAX_GAIN: aom_tune_metric = 7;
pub const aom_tune_metric_AOM_TUNE_BUTTERAUGLI: aom_tune_metric = 8;
pub const aom_tune_metric_AOM_TUNE_VMAF_SALIENCY_MAP: aom_tune_metric = 9;
pub const aom_tune_metric_AOM_TUNE_IQ: aom_tune_metric = 10;
pub type aom_tune_metric = ::std::os::raw::c_uint;
pub const aom_dist_metric_AOM_DIST_METRIC_PSNR: aom_dist_metric = 0;
pub const aom_dist_metric_AOM_DIST_METRIC_QM_PSNR: aom_dist_metric = 1;
pub type aom_dist_metric = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_svc_layer_id {
    pub spatial_layer_id: ::std::os::raw::c_int,
    pub temporal_layer_id: ::std::os::raw::c_int,
}
pub type aom_svc_layer_id_t = aom_svc_layer_id;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_svc_params {
    pub number_spatial_layers: ::std::os::raw::c_int,
    pub number_temporal_layers: ::std::os::raw::c_int,
    pub max_quantizers: [::std::os::raw::c_int; 32usize],
    pub min_quantizers: [::std::os::raw::c_int; 32usize],
    pub scaling_factor_num: [::std::os::raw::c_int; 4usize],
    pub scaling_factor_den: [::std::os::raw::c_int; 4usize],
    pub layer_target_bitrate: [::std::os::raw::c_int; 32usize],
    pub framerate_factor: [::std::os::raw::c_int; 8usize],
}
pub type aom_svc_params_t = aom_svc_params;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_svc_ref_frame_config {
    pub reference: [::std::os::raw::c_int; 7usize],
    pub ref_idx: [::std::os::raw::c_int; 7usize],
    pub refresh: [::std::os::raw::c_int; 8usize],
}
pub type aom_svc_ref_frame_config_t = aom_svc_ref_frame_config;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_svc_ref_frame_comp_pred {
    pub use_comp_pred: [::std::os::raw::c_int; 3usize],
}
pub type aom_svc_ref_frame_comp_pred_t = aom_svc_ref_frame_comp_pred;
pub const AOM_SVC_FRAME_DROP_MODE_AOM_LAYER_DROP: AOM_SVC_FRAME_DROP_MODE = 0;
pub const AOM_SVC_FRAME_DROP_MODE_AOM_FULL_SUPERFRAME_DROP: AOM_SVC_FRAME_DROP_MODE = 1;
pub type AOM_SVC_FRAME_DROP_MODE = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AOME_USE_REFERENCE = ::std::os::raw::c_int;
pub type aom_codec_control_type_AOME_SET_ROI_MAP = *mut aom_roi_map_t;
pub type aom_codec_control_type_AOME_SET_ACTIVEMAP = *mut aom_active_map_t;
pub type aom_codec_control_type_AOME_SET_SCALEMODE = *mut aom_scaling_mode_t;
pub type aom_codec_control_type_AOME_SET_SPATIAL_LAYER_ID = ::std::os::raw::c_int;
pub type aom_codec_control_type_AOME_SET_CPUUSED = ::std::os::raw::c_int;
pub type aom_codec_control_type_AOME_SET_ENABLEAUTOALTREF = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AOME_SET_SHARPNESS = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AOME_SET_STATIC_THRESHOLD = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AOME_GET_LAST_QUANTIZER = *mut ::std::os::raw::c_int;
pub type aom_codec_control_type_AOME_GET_LAST_QUANTIZER_64 = *mut ::std::os::raw::c_int;
pub type aom_codec_control_type_AOME_SET_ARNR_MAXFRAMES = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AOME_SET_ARNR_STRENGTH = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AOME_SET_TUNING = ::std::os::raw::c_int;
pub type aom_codec_control_type_AOME_SET_CQ_LEVEL = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AOME_SET_MAX_INTRA_BITRATE_PCT = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AOME_SET_NUMBER_SPATIAL_LAYERS = ::std::os::raw::c_int;
pub type aom_codec_control_type_AOME_SET_MAX_INTER_BITRATE_PCT = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_GF_CBR_BOOST_PCT = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_LOSSLESS = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_ROW_MT = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_TILE_COLUMNS = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_TILE_ROWS = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_ENABLE_TPL_MODEL = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_ENABLE_KEYFRAME_FILTERING = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_FRAME_PARALLEL_DECODING = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_ERROR_RESILIENT_MODE = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_S_FRAME_MODE = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_AQ_MODE = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_FRAME_PERIODIC_BOOST = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_NOISE_SENSITIVITY = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_TUNE_CONTENT = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_CDF_UPDATE_MODE = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_COLOR_PRIMARIES = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_TRANSFER_CHARACTERISTICS = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_MATRIX_COEFFICIENTS = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_CHROMA_SAMPLE_POSITION = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_MIN_GF_INTERVAL = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_MAX_GF_INTERVAL = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_GET_ACTIVEMAP = *mut aom_active_map_t;
pub type aom_codec_control_type_AV1E_SET_COLOR_RANGE = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_RENDER_SIZE = *mut ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_TARGET_SEQ_LEVEL_IDX = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_GET_SEQ_LEVEL_IDX = *mut ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_SUPERBLOCK_SIZE = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AOME_SET_ENABLEAUTOBWDREF = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_ENABLE_CDEF = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_ENABLE_RESTORATION = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_FORCE_VIDEO_MODE = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_ENABLE_OBMC = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_DISABLE_TRELLIS_QUANT = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_ENABLE_QM = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_ENABLE_DIST_8X8 = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_QM_MIN = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_QM_MAX = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_QM_Y = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_QM_U = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_QM_V = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_NUM_TG = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_MTU = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_ENABLE_RECT_PARTITIONS = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_AB_PARTITIONS = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_1TO4_PARTITIONS = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_MIN_PARTITION_SIZE = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_MAX_PARTITION_SIZE = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_INTRA_EDGE_FILTER = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_ORDER_HINT = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_TX64 = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_FLIP_IDTX = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_RECT_TX = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_DIST_WTD_COMP = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_REF_FRAME_MVS = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ALLOW_REF_FRAME_MVS = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_DUAL_FILTER = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_CHROMA_DELTAQ = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_MASKED_COMP = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_ONESIDED_COMP = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_INTERINTRA_COMP = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_SMOOTH_INTERINTRA = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_DIFF_WTD_COMP = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_INTERINTER_WEDGE = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_INTERINTRA_WEDGE = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_GLOBAL_MOTION = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_WARPED_MOTION = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ALLOW_WARPED_MOTION = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_FILTER_INTRA = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_SMOOTH_INTRA = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_PAETH_INTRA = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_CFL_INTRA = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_SUPERRES = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_OVERLAY = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_PALETTE = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_INTRABC = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_ANGLE_DELTA = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_DELTAQ_MODE = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_DELTALF_MODE = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_SINGLE_TILE_DECODING = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_ENABLE_MOTION_VECTOR_UNIT_TEST = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_TIMING_INFO_TYPE = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_FILM_GRAIN_TEST_VECTOR = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_FILM_GRAIN_TABLE = *const ::std::os::raw::c_char;
pub type aom_codec_control_type_AV1E_SET_DENOISE_NOISE_LEVEL = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_DENOISE_BLOCK_SIZE = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_CHROMA_SUBSAMPLING_X = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_CHROMA_SUBSAMPLING_Y = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_REDUCED_TX_TYPE_SET = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_INTRA_DCT_ONLY = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_INTER_DCT_ONLY = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_INTRA_DEFAULT_TX_ONLY = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_QUANT_B_ADAPT = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_GF_MAX_PYRAMID_HEIGHT = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_MAX_REFERENCE_FRAMES = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_REDUCED_REFERENCE_SET = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_COEFF_COST_UPD_FREQ = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_MODE_COST_UPD_FREQ = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_MV_COST_UPD_FREQ = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_TIER_MASK = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_MIN_CR = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_SVC_LAYER_ID = *mut aom_svc_layer_id_t;
pub type aom_codec_control_type_AV1E_SET_SVC_PARAMS = *mut aom_svc_params_t;
pub type aom_codec_control_type_AV1E_SET_SVC_REF_FRAME_CONFIG = *mut aom_svc_ref_frame_config_t;
pub type aom_codec_control_type_AV1E_SET_VMAF_MODEL_PATH = *const ::std::os::raw::c_char;
pub type aom_codec_control_type_AV1E_ENABLE_EXT_TILE_DEBUG = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_ENABLE_SB_MULTIPASS_UNIT_TEST = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_GF_MIN_PYRAMID_HEIGHT = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_VBR_CORPUS_COMPLEXITY_LAP = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_GET_BASELINE_GF_INTERVAL = *mut ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_DNL_DENOISING = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_DIAGONAL_INTRA = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_DV_COST_UPD_FREQ = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_PARTITION_INFO_PATH = *const ::std::os::raw::c_char;
pub type aom_codec_control_type_AV1E_SET_EXTERNAL_PARTITION = *mut aom_ext_part_funcs_t;
pub type aom_codec_control_type_AV1E_SET_ENABLE_DIRECTIONAL_INTRA = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_ENABLE_TX_SIZE_SEARCH = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_SVC_REF_FRAME_COMP_PRED =
    *mut aom_svc_ref_frame_comp_pred_t;
pub type aom_codec_control_type_AV1E_SET_DELTAQ_STRENGTH = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_LOOPFILTER_CONTROL = ::std::os::raw::c_int;
pub type aom_codec_control_type_AOME_GET_LOOPFILTER_LEVEL = *mut ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_AUTO_INTRA_TOOLS_OFF = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_RTC_EXTERNAL_RC = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_FP_MT = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_FP_MT_UNIT_TEST = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_GET_TARGET_SEQ_LEVEL_IDX = *mut ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_GET_NUM_OPERATING_POINTS = *mut ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_SKIP_POSTPROC_FILTERING = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_ENABLE_SB_QP_SWEEP = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_QUANTIZER_ONE_PASS = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_ENABLE_RATE_GUIDE_DELTAQ = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_RATE_DISTRIBUTION_INFO = *const ::std::os::raw::c_char;
pub type aom_codec_control_type_AV1E_GET_LUMA_CDEF_STRENGTH = *mut ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_BITRATE_ONE_PASS_CBR = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_SVC_FRAME_DROP_MODE = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_SET_MAX_CONSEC_FRAME_DROP_CBR = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_AUTO_TILES = ::std::os::raw::c_uint;
pub type aom_codec_control_type_AV1E_GET_HIGH_MOTION_CONTENT_SCREEN_RTC =
    *mut ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_POSTENCODE_DROP_RTC = ::std::os::raw::c_int;
pub type aom_codec_control_type_AV1E_SET_MAX_CONSEC_FRAME_DROP_MS_CBR = ::std::os::raw::c_int;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct aom_codec_dec_cfg {
    pub _address: u8,
}
